(window.webpackJsonp=window.webpackJsonp||[]).push([[20],{382:function(t,s,a){"use strict";a.r(s);var n=a(49),e=Object(n.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"模块化开发"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#模块化开发"}},[t._v("#")]),t._v(" 模块化开发")]),t._v(" "),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[t._v("写在前面")]),t._v(" "),a("p",[t._v("其实就我来说入行并不算晚，15年底，应该算是刚好踏上了移动互联网爆发的时间点（不然也找不到工作吧），但是后续一直在这家公司确实耽误了很多（技能方面）。就拿这个模块化开发的概念来说，其实在很早很早之前就有这方面的概念了，但是学习能力比较差，因为学历低（中专），且是电工转行，接触不到除公司之外其他任何的技术人员，自己的性格又不喜欢和陌生人聊天。导致自己进入了一个封闭的学习状态，封装了很多现在看起来基本就是垃圾的模块和功能库（对比一下老师讲的内容其实一直都在第一阶段来回徘徊）。现在回想起来，也不知道应该庆幸（发现了问题）还是应该可悲（用了太长时间才发现）。")])]),t._v(" "),a("h2",{attrs:{id:"模块化开发演化过程"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#模块化开发演化过程"}},[t._v("#")]),t._v(" 模块化开发演化过程")]),t._v(" "),a("blockquote",[a("p",[t._v("模块化开发其实就是一个思想，他的实现方式是多种多样的。且从一开始到现在是有一个循序渐进的演化过程的。")])]),t._v(" "),a("h3",{attrs:{id:"_1-文件划分的方式"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-文件划分的方式"}},[t._v("#")]),t._v(" 1. 文件划分的方式")]),t._v(" "),a("p",[t._v("就是最原始的把某个功能或者模块放到某个文件里面去，然后口头约定来实现模块化。\n"),a("strong",[t._v("缺点")])]),t._v(" "),a("ul",[a("li",[t._v("会污染全局作用域")]),t._v(" "),a("li",[t._v("会有命名冲突")]),t._v(" "),a("li",[t._v("模块之间没有从属关系无法管理依赖")])]),t._v(" "),a("h3",{attrs:{id:"_2-命名空间的方式"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-命名空间的方式"}},[t._v("#")]),t._v(" 2. 命名空间的方式")]),t._v(" "),a("p",[t._v("相较于第一种方式，这种方式仅仅只是把一个文件里面的方法都放到一个对象下面而已，仅仅只是小范围的解决了第一种方法的命名冲突问题。")]),t._v(" "),a("h3",{attrs:{id:"_3-iife"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-iife"}},[t._v("#")]),t._v(" 3. IIFE")]),t._v(" "),a("p",[t._v("立即执行函数，相较于第一第二种方法，立即执行函数实现了命名空间。但他的方式依然是非常的刀耕火种。")]),t._v(" "),a("div",{staticClass:"language-javascript line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("$")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" num "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("100")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("$")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'body'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("addClass")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'hidden'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("jQuery"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br")])]),a("blockquote",[a("p",[t._v("我自己对模块化的探索也就仅仅到此为止了。")])]),t._v(" "),a("h2",{attrs:{id:"模块化开发崭露头角"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#模块化开发崭露头角"}},[t._v("#")]),t._v(" 模块化开发崭露头角")]),t._v(" "),a("h3",{attrs:{id:"commonjs"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#commonjs"}},[t._v("#")]),t._v(" CommonJS")]),t._v(" "),a("p",[a("code",[t._v("nodejs")]),t._v(" 的 "),a("code",[t._v("commonjs")]),t._v(" 规范才算是能真正称得上模块化开发的一种开发方式。")]),t._v(" "),a("ul",[a("li",[t._v("他一个文件就是一个模块")]),t._v(" "),a("li",[t._v("每个模块都有自己的独立作用域")]),t._v(" "),a("li",[t._v("他通过 "),a("code",[t._v("module.exports")]),t._v(" 导出成员")]),t._v(" "),a("li",[t._v("然后通过 "),a("code",[t._v("require")]),t._v(" 函数载入函数")])]),t._v(" "),a("p",[t._v("但是 "),a("code",[t._v("commonjs")]),t._v(" 加载模块的方式是使用同步加载的，在 "),a("code",[t._v("nodejs")]),t._v(" 中没有什么问题，却并不适用于浏览器环境。")]),t._v(" "),a("h3",{attrs:{id:"amd-asynchronous-module-definition"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#amd-asynchronous-module-definition"}},[t._v("#")]),t._v(" AMD (Asynchronous Module Definition)")]),t._v(" "),a("p",[t._v("一个适用于浏览器环境的 "),a("strong",[t._v("异步模块化开发标准")]),t._v("，代表作就是 "),a("code",[t._v("Require.js")]),t._v("。他可以解决上面没有解决的命名空间和依赖管理的问题。")]),t._v(" "),a("p",[t._v("定义一个模块的时候，他接受三个参数")]),t._v(" "),a("ul",[a("li",[t._v("第一个参数是一个字符串，为当前模块的名字")]),t._v(" "),a("li",[t._v("第二个参数是一个数组，为需要加载的模块")]),t._v(" "),a("li",[t._v("第三个参数是一个函数，函数内的参数分别对应第二个参数加载的模块")])]),t._v(" "),a("div",{staticClass:"language-javascript line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("define")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'module1'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'jquery'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'lodash'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("$"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" _")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" a "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("100")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("handleBtn")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("$")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'body'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("addClass")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'hidden'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br")])]),a("p",[t._v("使用一个 "),a("code",[t._v("AMD")]),t._v(" 模块。")]),t._v(" "),a("ul",[a("li",[t._v("第一个参数是数组，为想要加载的模块")]),t._v(" "),a("li",[t._v("第二个参数是函数，函数的参数对应加载的模块")])]),t._v(" "),a("div",{staticClass:"language-javascript line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("require")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'module1'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'module1'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  module1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("handleBtn")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br")])]),a("p",[a("code",[t._v("AMD")]),t._v(" 可以实现模块化标准，但是使用起来还是麻烦的，因为除了业务代码之外，还要去写一堆模块化标准的代码。")]),t._v(" "),a("h2",{attrs:{id:"模块化标准的最佳实践"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#模块化标准的最佳实践"}},[t._v("#")]),t._v(" 模块化标准的最佳实践")]),t._v(" "),a("p",[t._v("这里没啥好说的了，因为就是一直都在用的。")]),t._v(" "),a("ul",[a("li",[t._v("浏览器环境就是 "),a("code",[t._v("ES Modules")]),t._v(" 规范")]),t._v(" "),a("li",[a("code",[t._v("nodejs")]),t._v(" 环境就是 "),a("code",[t._v("commonjs")]),t._v(" 规范")])])])}),[],!1,null,null,null);s.default=e.exports}}]);