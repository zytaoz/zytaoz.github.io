(window.webpackJsonp=window.webpackJsonp||[]).push([[41],{402:function(t,s,a){"use strict";a.r(s);var e=a(49),n=Object(e.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"integer-整型"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#integer-整型"}},[t._v("#")]),t._v(" "),a("code",[t._v("Integer")]),t._v(" 整型")]),t._v(" "),a("p",[t._v("整型可以使用十进制，十六进制，八进制和二进制。前端加一个 "),a("code",[t._v("-")]),t._v(" 的负数也属于整型。")]),t._v(" "),a("h2",{attrs:{id:"整型的强制类型转换"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#整型的强制类型转换"}},[t._v("#")]),t._v(" 整型的强制类型转换")]),t._v(" "),a("p",[t._v("在一个变量前面加 "),a("code",[t._v("(int)")]),t._v(" 或者 "),a("code",[t._v("(integer)")]),t._v(" 可以强制转换为布尔值。"),a("br")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("FALSE")]),t._v(" 会转换为 0，"),a("code",[t._v("TRUE")]),t._v(" 会转换为 1。")]),t._v(" "),a("li",[t._v("从浮点型转换成整型时，将会向下取整。")])]),t._v(" "),a("div",{staticClass:"custom-block warning"},[a("p",{staticClass:"custom-block-title"},[t._v("绝对不要将未知的浮点数强制转换为整型，这样有时会导致结果不可预知。")]),t._v(" "),a("div",{staticClass:"language-php line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-php"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("echo")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword type-casting"}},[t._v("int")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0.1")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0.7")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 7")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br")])])]),t._v(" "),a("ul",[a("li",[t._v("从字符串转换，"),a("a",{attrs:{href:""}},[t._v("点击查看")]),t._v(";")])]),t._v(" "),a("div",{staticClass:"custom-block danger"},[a("p",{staticClass:"custom-block-title"},[t._v("其他类型的转换")]),t._v(" "),a("p",[t._v("没有定义从其它类型转换为整型的行为。不要依赖任何现有的行为，因为它会未加通知地改变。")])])])}),[],!1,null,null,null);s.default=n.exports}}]);