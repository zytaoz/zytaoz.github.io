(window.webpackJsonp=window.webpackJsonp||[]).push([[45],{410:function(t,n,s){"use strict";s.r(n);var e=s(49),a=Object(e.a)({},(function(){var t=this,n=t.$createElement,s=t._self._c||n;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"string-字符串"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#string-字符串"}},[t._v("#")]),t._v(" "),s("code",[t._v("String")]),t._v(" 字符串")]),t._v(" "),s("p",[t._v("一个字符串就是由一系列的字符组成的，每一个字符都等同于一个字节。 这意味着 "),s("code",[t._v("PHP")]),t._v(" 只能支持 256 的字符集，因此不支持 "),s("code",[t._v("Unicode")]),t._v("。\n"),s("br")]),t._v(" "),s("p",[s("strong",[t._v("string 最大可达2GB")])]),t._v(" "),s("h2",{attrs:{id:"语法"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#语法"}},[t._v("#")]),t._v(" 语法")]),t._v(" "),s("p",[t._v("一个字符串有四种表达方式。")]),t._v(" "),s("ul",[s("li",[t._v("单引号")]),t._v(" "),s("li",[t._v("双引号")]),t._v(" "),s("li",[t._v("heredoc 语法结构")]),t._v(" "),s("li",[t._v("nowdoc 语法结构")])]),t._v(" "),s("h3",{attrs:{id:"单引号"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#单引号"}},[t._v("#")]),t._v(" 单引号")]),t._v(" "),s("p",[t._v("定义一个字符串最简单的方式是使用一个单引号把他包起来。以下示范了多种字符串的形式，包括如何在单引号内使用单引号和反斜杠。")]),t._v(" "),s("div",{staticClass:"language-php line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-php"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 单行")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("echo")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string single-quoted-string"}},[t._v("'this is a simple string'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# this is a simple string")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 多行")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("echo")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string single-quoted-string"}},[t._v("'You can also have embedded newlines in \nstrings this way as it is\nokay to do'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# You can also have embedded newlines in strings this way as it is okay to do")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 单引号字符串内包含一个单引号")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("echo")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string single-quoted-string"}},[t._v("'Arnold once said: \"I\\'ll be back\"'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v('# Arnold once said: "I\'ll be back"')]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 单引号字符串内包含一个反斜杠")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("echo")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string single-quoted-string"}},[t._v("'You deleted C:\\\\*.*?'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# You deleted C:\\*.*?")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 单引号字符串内不支持转义序列")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("echo")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string single-quoted-string"}},[t._v("'This will not expand: \\n a newline'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# This will not expand: \\n a newline;")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 单引号字符串内不支持变量")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("echo")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string single-quoted-string"}},[t._v("'Variables do not $expand $either'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Variables do not $expand $either")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br"),s("span",{staticClass:"line-number"},[t._v("8")]),s("br"),s("span",{staticClass:"line-number"},[t._v("9")]),s("br"),s("span",{staticClass:"line-number"},[t._v("10")]),s("br"),s("span",{staticClass:"line-number"},[t._v("11")]),s("br"),s("span",{staticClass:"line-number"},[t._v("12")]),s("br"),s("span",{staticClass:"line-number"},[t._v("13")]),s("br"),s("span",{staticClass:"line-number"},[t._v("14")]),s("br"),s("span",{staticClass:"line-number"},[t._v("15")]),s("br"),s("span",{staticClass:"line-number"},[t._v("16")]),s("br"),s("span",{staticClass:"line-number"},[t._v("17")]),s("br"),s("span",{staticClass:"line-number"},[t._v("18")]),s("br"),s("span",{staticClass:"line-number"},[t._v("19")]),s("br"),s("span",{staticClass:"line-number"},[t._v("20")]),s("br"),s("span",{staticClass:"line-number"},[t._v("21")]),s("br"),s("span",{staticClass:"line-number"},[t._v("22")]),s("br"),s("span",{staticClass:"line-number"},[t._v("23")]),s("br"),s("span",{staticClass:"line-number"},[t._v("24")]),s("br"),s("span",{staticClass:"line-number"},[t._v("25")]),s("br")])]),s("h3",{attrs:{id:"双引号"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#双引号"}},[t._v("#")]),t._v(" 双引号")]),t._v(" "),s("p",[t._v("如果字符串是在双引号内使用的，那么 "),s("code",[t._v("PHP")]),t._v(" 将对一些特殊字符做转义。")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",[t._v("序列")]),t._v(" "),s("th",[t._v("含义")])])]),t._v(" "),s("tbody",[s("tr",[s("td",[s("code",[t._v("\\n")])]),t._v(" "),s("td",[t._v("换行（ASCII 字符集中的 LF 或 0x0A (10)）")])]),t._v(" "),s("tr",[s("td",[s("code",[t._v("\\r")])]),t._v(" "),s("td",[t._v("回车（ASCII 字符集中的 CR 或 0x0D (13)）")])]),t._v(" "),s("tr",[s("td",[s("code",[t._v("\\t")])]),t._v(" "),s("td",[t._v("水平制表符（ASCII 字符集中的 HT 或 0x09 (9)）")])]),t._v(" "),s("tr",[s("td",[s("code",[t._v("\\v")])]),t._v(" "),s("td",[t._v("垂直制表符（ASCII 字符集中的 VT 或 0x0B (11)）（自 PHP 5.2.5 起）")])]),t._v(" "),s("tr",[s("td",[s("code",[t._v("\\e")])]),t._v(" "),s("td",[t._v("Escape（ASCII 字符集中的 ESC 或 0x1B (27)）（自 PHP 5.4.0 起）")])]),t._v(" "),s("tr",[s("td",[s("code",[t._v("\\f")])]),t._v(" "),s("td",[t._v("换页（ASCII 字符集中的 FF 或 0x0C (12)）（自 PHP 5.2.5 起）")])]),t._v(" "),s("tr",[s("td",[s("code",[t._v("\\\\")])]),t._v(" "),s("td",[t._v("反斜线")])]),t._v(" "),s("tr",[s("td",[s("code",[t._v("\\$")])]),t._v(" "),s("td",[t._v("美元标记")])]),t._v(" "),s("tr",[s("td",[s("code",[t._v('\\"')])]),t._v(" "),s("td",[t._v("双引号")])]),t._v(" "),s("tr",[s("td",[s("code",[t._v("\\[0-7]{1,3}")])]),t._v(" "),s("td",[t._v("符合该正则表达式序列的是一个以八进制方式来表达的字符")])]),t._v(" "),s("tr",[s("td",[s("code",[t._v("\\x[0-9A-Fa-f]{1,2}")])]),t._v(" "),s("td",[t._v("符合该正则表达式序列的是一个以十六进制方式来表达的字符")])])])]),t._v(" "),s("p",[t._v("和单引号字符串一样，转义任何其他字符都会导致反斜杠被显示出来。PHP 5.1.1 以前，"),s("code",[t._v("\\{$var}")]),t._v(" 中的反斜线还不会被显示出来。")]),t._v(" "),s("div",{staticClass:"custom-block tip"},[s("p",{staticClass:"custom-block-title"},[t._v("双引号最重要的特性")]),t._v(" "),s("p",[t._v("用双引号定义的字符串最重要的特性是变量会被解析。")])]),t._v(" "),s("h3",{attrs:{id:"heredoc-结构"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#heredoc-结构"}},[t._v("#")]),t._v(" Heredoc 结构")]),t._v(" "),s("p",[t._v("第三种表达字符串的方式是使用 "),s("code",[t._v("Heredoc")]),t._v(" 句法结构："),s("code",[t._v("<<<")]),t._v("。在该标识符后要提供一个标识符，然后换行，然后写字符串本身，最后要用前面定义的标识符本身作为结束标识。")]),t._v(" "),s("p",[s("strong",[t._v("结束标识必须要在改行的第一列！")]),t._v("，而且标识符的命名规则也要和 "),s("code",[t._v("PHP")]),t._v(" 命名变量一样遵守准则：能包含字母、数字和下划线，并且必须以字母和下划线作为开头。")]),t._v(" "),s("div",{staticClass:"custom-block danger"},[s("p",{staticClass:"custom-block-title"},[t._v("结束标识需要注意的点")]),t._v(" "),s("p",[t._v("需要注意的是，结束标识这一行除了在标识符后面有一个分号之外是不允许有其他任何字符的。这意味着结束标识符前面不能缩进，后面不许有任何其他东西，包括空格。更重要的是在结束标识符前面必须是一个被本地操作系统认可的换行符。")]),t._v(" "),s("p",[t._v("如果不遵守该规则导致结束标识不“干净”，"),s("code",[t._v("PHP")]),t._v(" 将认为它不是结束标识符而继续寻找。如果在文件结束前也没有找到一个正确的结束标识符，PHP 将会在最后一行产生一个解析错误。")]),t._v(" "),s("p",[s("code",[t._v("Heredocs")]),t._v(" 结构不能用来初始化类的属性。自 "),s("code",[t._v("PHP")]),t._v(" 5.3 起，此限制仅对 "),s("code",[t._v("heredoc")]),t._v(" 包含变量时有效。")])]),t._v(" "),s("p",[t._v("Heredoc 结构就象是没有使用双引号的双引号字符串，这就是说在 heredoc 结构中单引号不用被转义，但是上文中列出的转义序列还可以使用。变量将被替换，但在 heredoc 结构中含有复杂的变量时要格外小心。")]),t._v(" "),s("div",{staticClass:"language-php line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-php"}},[s("code",[s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$a")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string heredoc-string"}},[s("span",{pre:!0,attrs:{class:"token delimiter symbol"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<<<")]),t._v("EOC")]),t._v("\n  You can also have embedded newlines in \n  strings this way as it is\n  okay to do\n"),s("span",{pre:!0,attrs:{class:"token delimiter symbol"}},[t._v("EOC"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")])])]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br")])]),s("p",[s("strong",[t._v("讲道理啊，我没看懂这个东西是干嘛用的，为什么不用双引号用这个。但是前段时间在写 "),s("code",[t._v("Alfred")]),t._v(" 插件的时候看到里面使用了这种语法结构，不明白其中的缘由。所以这个东西没有看懂，先暂时放置")])]),t._v(" "),s("h3",{attrs:{id:"nowdoc-结构"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#nowdoc-结构"}},[t._v("#")]),t._v(" "),s("code",[t._v("Nowdoc")]),t._v(" 结构")]),t._v(" "),s("p",[t._v("就象 "),s("code",[t._v("heredoc")]),t._v(" 结构类似于双引号字符串，"),s("code",[t._v("Nowdoc")]),t._v(" 结构是类似于单引号字符串的。"),s("code",[t._v("Nowdoc")]),t._v(" 结构很象 "),s("code",[t._v("heredoc")]),t._v(" 结构，但是 "),s("code",[t._v("nowdoc")]),t._v(" 中不进行解析操作。这种结构很适合用于嵌入 "),s("code",[t._v("PHP")]),t._v(" 代码或其它大段文本而无需对其中的特殊字符进行转义。与 "),s("code",[t._v("SGML")]),t._v(" 的 "),s("code",[t._v("<![CDATA[ ]]>")]),t._v(" 结构是用来声明大段的不用解析的文本类似，"),s("code",[t._v("nowdoc")]),t._v(" 结构也有相同的特征。")]),t._v(" "),s("p",[t._v("一个 "),s("code",[t._v("nowdoc")]),t._v(" 结构也用和 "),s("code",[t._v("heredocs")]),t._v(" 结构一样的标记 "),s("code",[t._v("<<<")]),t._v("， 但是跟在后面的标识符要用单引号括起来，即 "),s("code",[t._v("<<<'EOT'")]),t._v("。"),s("code",[t._v("Heredoc")]),t._v(" 结构的所有规则也同样适用于 "),s("code",[t._v("nowdoc")]),t._v(" 结构，尤其是结束标识符的规则。")]),t._v(" "),s("h2",{attrs:{id:"变量解析"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#变量解析"}},[t._v("#")]),t._v(" 变量解析")]),t._v(" "),s("p",[t._v("当变量被双引号或者 "),s("code",[t._v("heredoc")]),t._v(" 结构包裹时，变量会被解析。")]),t._v(" "),s("h3",{attrs:{id:"简单语法"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#简单语法"}},[t._v("#")]),t._v(" 简单语法")]),t._v(" "),s("p",[t._v("简单语法是比较常用的，他可以用最短的代码在一段字符串内嵌入一个变量。")]),t._v(" "),s("div",{staticClass:"language-php line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-php"}},[s("code",[s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$a")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string single-quoted-string"}},[t._v("'test'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("echo")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string double-quoted-string"}},[t._v('"this is '),s("span",{pre:!0,attrs:{class:"token interpolation"}},[s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$a")])]),t._v('"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# this is test")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br")])]),s("div",{staticClass:"custom-block tip"},[s("p",{staticClass:"custom-block-title"},[t._v("小贴士")]),t._v(" "),s("p",[s("code",[t._v("PHP_EOL")]),t._v(" 是 "),s("code",[t._v("PHP")]),t._v(" 换行符")])]),t._v(" "),s("p",[t._v("也可以插入 "),s("code",[t._v("array")])]),t._v(" "),s("div",{staticClass:"language-php line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-php"}},[s("code",[s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$juices")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("array")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string double-quoted-string"}},[t._v('"apple"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string double-quoted-string"}},[t._v('"orange"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string double-quoted-string"}},[t._v('"koolaid1"')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string double-quoted-string"}},[t._v('"purple"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("echo")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string double-quoted-string"}},[t._v('"He drank some '),s("span",{pre:!0,attrs:{class:"token interpolation"}},[s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$juices")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")])]),t._v(' juice."')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("PHP_EOL")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# He drank some apple juice.")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("echo")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string double-quoted-string"}},[t._v('"He drank some '),s("span",{pre:!0,attrs:{class:"token interpolation"}},[s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$juices")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")])]),t._v(' juice."')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("PHP_EOL")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# He drank som orange juice.")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 错误的表达方式，因为找不到 $juice 这个变量，所以没有对应输出")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("echo")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string double-quoted-string"}},[t._v('"He drank some juice made of '),s("span",{pre:!0,attrs:{class:"token interpolation"}},[s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$juice")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")])]),t._v('s."')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("PHP_EOL")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# He drank some juice made of s. ")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("echo")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string double-quoted-string"}},[t._v('"He drank some '),s("span",{pre:!0,attrs:{class:"token interpolation"}},[s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$juices")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("koolaid1"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")])]),t._v(' juice."')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("PHP_EOL")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# He drack some pruple juice.")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br"),s("span",{staticClass:"line-number"},[t._v("8")]),s("br"),s("span",{staticClass:"line-number"},[t._v("9")]),s("br"),s("span",{staticClass:"line-number"},[t._v("10")]),s("br"),s("span",{staticClass:"line-number"},[t._v("11")]),s("br"),s("span",{staticClass:"line-number"},[t._v("12")]),s("br"),s("span",{staticClass:"line-number"},[t._v("13")]),s("br"),s("span",{staticClass:"line-number"},[t._v("14")]),s("br")])]),s("p",[t._v("或者 "),s("code",[t._v("object")]),t._v("。")]),t._v(" "),s("div",{staticClass:"language-php line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-php"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" people "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$john")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string double-quoted-string"}},[t._v('"John Smith"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$jane")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string double-quoted-string"}},[t._v('"Jane Smith"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$robert")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string double-quoted-string"}},[t._v('"Robert Paulsen"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("   \n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$smith")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string double-quoted-string"}},[t._v('"Smith"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$people")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("people")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("echo")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string double-quoted-string"}},[t._v('"'),s("span",{pre:!0,attrs:{class:"token interpolation"}},[s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$people")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),s("span",{pre:!0,attrs:{class:"token property"}},[t._v("john")])]),t._v(" drank some "),s("span",{pre:!0,attrs:{class:"token interpolation"}},[s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$juices")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")])]),t._v(' juice."')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("PHP_EOL")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# John Smith drank some apple juice.")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("echo")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string double-quoted-string"}},[t._v('"'),s("span",{pre:!0,attrs:{class:"token interpolation"}},[s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$people")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),s("span",{pre:!0,attrs:{class:"token property"}},[t._v("john")])]),t._v(" then said hello to "),s("span",{pre:!0,attrs:{class:"token interpolation"}},[s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$people")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),s("span",{pre:!0,attrs:{class:"token property"}},[t._v("jane")])]),t._v('."')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("PHP_EOL")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# John Smith then said hello to Jane Smith.")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("echo")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string double-quoted-string"}},[t._v('"'),s("span",{pre:!0,attrs:{class:"token interpolation"}},[s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$people")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),s("span",{pre:!0,attrs:{class:"token property"}},[t._v("john")])]),t._v("'s wife greeted "),s("span",{pre:!0,attrs:{class:"token interpolation"}},[s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$people")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),s("span",{pre:!0,attrs:{class:"token property"}},[t._v("robert")])]),t._v('."')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("PHP_EOL")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# John smith's wife greeted Robert Paulsen.")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 错误的表达方式，在 $people 对象里找不到 smiths")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("echo")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string double-quoted-string"}},[t._v('"'),s("span",{pre:!0,attrs:{class:"token interpolation"}},[s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$people")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),s("span",{pre:!0,attrs:{class:"token property"}},[t._v("robert")])]),t._v(" greeted the two "),s("span",{pre:!0,attrs:{class:"token interpolation"}},[s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$people")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),s("span",{pre:!0,attrs:{class:"token property"}},[t._v("smiths")])]),t._v('."')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Robert Paulsen greeted the two . ")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br"),s("span",{staticClass:"line-number"},[t._v("8")]),s("br"),s("span",{staticClass:"line-number"},[t._v("9")]),s("br"),s("span",{staticClass:"line-number"},[t._v("10")]),s("br"),s("span",{staticClass:"line-number"},[t._v("11")]),s("br"),s("span",{staticClass:"line-number"},[t._v("12")]),s("br"),s("span",{staticClass:"line-number"},[t._v("13")]),s("br"),s("span",{staticClass:"line-number"},[t._v("14")]),s("br"),s("span",{staticClass:"line-number"},[t._v("15")]),s("br"),s("span",{staticClass:"line-number"},[t._v("16")]),s("br"),s("span",{staticClass:"line-number"},[t._v("17")]),s("br"),s("span",{staticClass:"line-number"},[t._v("18")]),s("br"),s("span",{staticClass:"line-number"},[t._v("19")]),s("br"),s("span",{staticClass:"line-number"},[t._v("20")]),s("br"),s("span",{staticClass:"line-number"},[t._v("21")]),s("br")])]),s("p",[t._v("如果要表示更复杂的结构，就需要用复杂语法。")]),t._v(" "),s("h3",{attrs:{id:"复杂语法-花括号语法"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#复杂语法-花括号语法"}},[t._v("#")]),t._v(" 复杂语法（花括号语法）")]),t._v(" "),s("p",[t._v("复杂语法并不是以为复杂而得名，而是因为他可以使用复杂的表达式。")]),t._v(" "),s("p",[t._v("任何具有字符串的标量或者变量、数组单元和对象属性都可以使用该语法。只需要在字符串里面写出表达式，然后使用 "),s("code",[t._v("{}")]),t._v(" 包起来就可以了。")]),t._v(" "),s("div",{staticClass:"custom-block warning"},[s("p",{staticClass:"custom-block-title"},[t._v("需要注意的")]),t._v(" "),s("p",[t._v("由于 "),s("code",[t._v("{")]),t._v(" 无法被转义，只有 "),s("code",[t._v("$")]),t._v(" 紧挨着 "),s("code",[t._v("{")]),t._v(" 时才会被识别。可以用 "),s("code",[t._v("{\\$")]),t._v(" 来表达 "),s("code",[t._v("{$")]),t._v("。")])]),t._v(" "),s("div",{staticClass:"language-php line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-php"}},[s("code",[s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$great")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string single-quoted-string"}},[t._v("'fantastic'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 错误的")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("echo")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string double-quoted-string"}},[t._v('"This is { '),s("span",{pre:!0,attrs:{class:"token interpolation"}},[s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$great")])]),t._v('}"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# This is { fantastic}")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 正确的")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("echo")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string double-quoted-string"}},[t._v('"This is $'),s("span",{pre:!0,attrs:{class:"token interpolation"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$great")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")])]),t._v('"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("echo")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string double-quoted-string"}},[t._v('"This is '),s("span",{pre:!0,attrs:{class:"token interpolation"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$great")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")])]),t._v('"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# This is fantastic")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 正确的")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("echo")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string double-quoted-string"}},[t._v('"This square is '),s("span",{pre:!0,attrs:{class:"token interpolation"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$square")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),s("span",{pre:!0,attrs:{class:"token property"}},[t._v("width")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")])]),t._v('00 centimeters broad."')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# This square is 100 centimeters broad.")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 正确的，只有通过花括号语法才能正确解析带引号的键名")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("echo")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string double-quoted-string"}},[t._v('"This works: '),s("span",{pre:!0,attrs:{class:"token interpolation"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$arr")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token string single-quoted-string"}},[t._v("'key'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")])]),t._v('"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 正确的")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("echo")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string double-quoted-string"}},[t._v('"This works: '),s("span",{pre:!0,attrs:{class:"token interpolation"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$arr")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")])]),t._v('"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 这是错误的表达式，因为就象 $foo[bar] 的格式在字符串以外也是错的一样。")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 换句话说，只有在 PHP 能找到常量 foo 的前提下才会正常工作；这里会产生一个")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// E_NOTICE (undefined constant) 级别的错误。")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("echo")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string double-quoted-string"}},[t._v('"This is wrong: '),s("span",{pre:!0,attrs:{class:"token interpolation"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$arr")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("foo"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")])]),t._v('"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 错误的")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("echo")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string double-quoted-string"}},[t._v('"This is the return value of getName(): {getName()}"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# This is the return value of getName(): {getName()}")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br"),s("span",{staticClass:"line-number"},[t._v("8")]),s("br"),s("span",{staticClass:"line-number"},[t._v("9")]),s("br"),s("span",{staticClass:"line-number"},[t._v("10")]),s("br"),s("span",{staticClass:"line-number"},[t._v("11")]),s("br"),s("span",{staticClass:"line-number"},[t._v("12")]),s("br"),s("span",{staticClass:"line-number"},[t._v("13")]),s("br"),s("span",{staticClass:"line-number"},[t._v("14")]),s("br"),s("span",{staticClass:"line-number"},[t._v("15")]),s("br"),s("span",{staticClass:"line-number"},[t._v("16")]),s("br"),s("span",{staticClass:"line-number"},[t._v("17")]),s("br"),s("span",{staticClass:"line-number"},[t._v("18")]),s("br"),s("span",{staticClass:"line-number"},[t._v("19")]),s("br"),s("span",{staticClass:"line-number"},[t._v("20")]),s("br"),s("span",{staticClass:"line-number"},[t._v("21")]),s("br"),s("span",{staticClass:"line-number"},[t._v("22")]),s("br"),s("span",{staticClass:"line-number"},[t._v("23")]),s("br"),s("span",{staticClass:"line-number"},[t._v("24")]),s("br"),s("span",{staticClass:"line-number"},[t._v("25")]),s("br"),s("span",{staticClass:"line-number"},[t._v("26")]),s("br"),s("span",{staticClass:"line-number"},[t._v("27")]),s("br"),s("span",{staticClass:"line-number"},[t._v("28")]),s("br"),s("span",{staticClass:"line-number"},[t._v("29")]),s("br")])]),s("p",[t._v("也可以在字符串中用此语法通过变量来调用类的属性。")]),t._v(" "),s("div",{staticClass:"language-php line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-php"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" foo "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$bar")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string single-quoted-string"}},[t._v("'I am bar.'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$foo")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("foo")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$bar")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string single-quoted-string"}},[t._v("'bar'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$baz")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("array")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string single-quoted-string"}},[t._v("'foo'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string single-quoted-string"}},[t._v("'bar'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string single-quoted-string"}},[t._v("'baz'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string single-quoted-string"}},[t._v("'quux'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("echo")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string double-quoted-string"}},[t._v('"'),s("span",{pre:!0,attrs:{class:"token interpolation"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$foo")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$bar")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")])]),t._v('\\n"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# I am bar.")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("echo")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string double-quoted-string"}},[t._v('"'),s("span",{pre:!0,attrs:{class:"token interpolation"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$foo")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$baz")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")])]),t._v('\\n"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# I am bar.")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br"),s("span",{staticClass:"line-number"},[t._v("8")]),s("br"),s("span",{staticClass:"line-number"},[t._v("9")]),s("br"),s("span",{staticClass:"line-number"},[t._v("10")]),s("br"),s("span",{staticClass:"line-number"},[t._v("11")]),s("br"),s("span",{staticClass:"line-number"},[t._v("12")]),s("br")])]),s("div",{staticClass:"custom-block tip"},[s("p",{staticClass:"custom-block-title"},[t._v("Note")]),t._v(" "),s("p",[t._v("函数、方法、静态类变量和类常量只有在 "),s("code",[t._v("PHP 5")]),t._v(" 以后才可在 "),s("code",[t._v("{$}")]),t._v(" 中使用。然而，只有在该字符串被定义的命名空间中才可以将其值作为变量名来访问。只单一使用花括号 "),s("code",[t._v("({})")]),t._v(" 无法处理从函数或方法的返回值或者类常量以及类静态变量的值。")])]),t._v(" "),s("p",[t._v("说白了就是变量的作用域问题。")]),t._v(" "),s("div",{staticClass:"language-php line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-php"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" beers "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" softdrink "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string single-quoted-string"}},[t._v("'rootbeer'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("static")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$ale")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string single-quoted-string"}},[t._v("'ipa'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$rootbeer")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string single-quoted-string"}},[t._v("'A & W'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$ipa")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string single-quoted-string"}},[t._v("'Alexander Keith\\'s'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("echo")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string double-quoted-string"}},[t._v("\"I'd like an "),s("span",{pre:!0,attrs:{class:"token interpolation"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token class-name static-context"}},[t._v("beers")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),t._v("softdrink"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")])]),t._v('\\n"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# I'd like an A & W")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("echo")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string double-quoted-string"}},[t._v("\"I'd like an "),s("span",{pre:!0,attrs:{class:"token interpolation"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token class-name static-context"}},[t._v("beers")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$ale")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")])]),t._v('\\n"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# I'd like an Alexander Keith's")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br"),s("span",{staticClass:"line-number"},[t._v("8")]),s("br"),s("span",{staticClass:"line-number"},[t._v("9")]),s("br"),s("span",{staticClass:"line-number"},[t._v("10")]),s("br"),s("span",{staticClass:"line-number"},[t._v("11")]),s("br"),s("span",{staticClass:"line-number"},[t._v("12")]),s("br"),s("span",{staticClass:"line-number"},[t._v("13")]),s("br")])]),s("h2",{attrs:{id:"存储或修改字符串中的字符"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#存储或修改字符串中的字符"}},[t._v("#")]),t._v(" 存储或修改字符串中的字符")]),t._v(" "),s("p",[s("code",[t._v("string")]),t._v(" 中的字符可以利用类似数组下标一样的方括号去取。意思就是说完全可以把字符串当成一个由字符组成的数组。")]),t._v(" "),s("div",{staticClass:"custom-block tip"},[s("p",{staticClass:"custom-block-title"},[t._v("提示")]),t._v(" "),s("p",[t._v("不止可以使用 "),s("code",[t._v("[]")]),t._v(" 去取，还可以使用 "),s("code",[t._v("{}")]),t._v("，但是并不推荐使用花括号去取。")])]),t._v(" "),s("div",{staticClass:"custom-block warning"},[s("p",{staticClass:"custom-block-title"},[t._v("需要注意的")]),t._v(" "),s("ul",[s("li",[t._v("用超出该字符串长度的下标去写入字符串，将会拉长这个字符串并填入空格。")]),t._v(" "),s("li",[t._v("非整数类型的下标会转换成整数。")]),t._v(" "),s("li",[t._v("非法下标类型会产生一个 "),s("code",[t._v("E_NOTICE")]),t._v(" 级别错误。")]),t._v(" "),s("li",[t._v("用负数下标写入字符串时会产生一个 "),s("code",[t._v("E_NOTICE")]),t._v(" 级别错误。")]),t._v(" "),s("li",[t._v("用负数下标读取字符串时返回空字符串。")]),t._v(" "),s("li",[t._v("写入时只用到了赋值字符串的第一个字符。")]),t._v(" "),s("li",[t._v("用空字符串赋值则赋给的值是 "),s("code",[t._v("NULL")]),t._v(" 字符。")])])]),t._v(" "),s("div",{staticClass:"language-php line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-php"}},[s("code",[s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$str")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string single-quoted-string"}},[t._v("'This is a test.'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 获取第一个字符")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("echo")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$str")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# T")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 获取第三个字符")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("echo")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$str")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# i")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 获取最后一个字符")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("echo")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$str")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("strlen")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$str")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# .")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 修改最后一个字符")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$str")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("strlen")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$str")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string single-quoted-string"}},[t._v("'e'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("echo")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$str")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# This is a teste")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br"),s("span",{staticClass:"line-number"},[t._v("8")]),s("br"),s("span",{staticClass:"line-number"},[t._v("9")]),s("br"),s("span",{staticClass:"line-number"},[t._v("10")]),s("br"),s("span",{staticClass:"line-number"},[t._v("11")]),s("br"),s("span",{staticClass:"line-number"},[t._v("12")]),s("br"),s("span",{staticClass:"line-number"},[t._v("13")]),s("br"),s("span",{staticClass:"line-number"},[t._v("14")]),s("br"),s("span",{staticClass:"line-number"},[t._v("15")]),s("br"),s("span",{staticClass:"line-number"},[t._v("16")]),s("br"),s("span",{staticClass:"line-number"},[t._v("17")]),s("br"),s("span",{staticClass:"line-number"},[t._v("18")]),s("br")])]),s("h2",{attrs:{id:"字符串函数和运算符"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#字符串函数和运算符"}},[t._v("#")]),t._v(" 字符串函数和运算符")]),t._v(" "),s("p",[t._v("连接字符串使用 "),s("code",[t._v(".")]),t._v("。")]),t._v(" "),s("div",{staticClass:"language-php line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-php"}},[s("code",[s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$str")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string single-quoted-string"}},[t._v("'This is '")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token string single-quoted-string"}},[t._v("'test'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("echo")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$str")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# This is test")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br")])]),s("p",[s("strong",[t._v("字符串函数的列表")]),s("a",{attrs:{href:"https://www.php.net/manual/zh/ref.strings.php",target:"_blank",rel:"noopener noreferrer"}},[t._v("点击查看"),s("OutboundLink")],1),t._v(";")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",[t._v("函数名")]),t._v(" "),s("th",[t._v("简介")])])]),t._v(" "),s("tbody",[s("tr",[s("td",[s("a",{attrs:{href:"https://www.php.net/manual/zh/function.addcslashes.php",target:"_blank",rel:"noopener noreferrer"}},[t._v("addcslashes"),s("OutboundLink")],1)]),t._v(" "),s("td",[t._v("以 C 语言风格使用反斜线转义字符串中的字符")])]),t._v(" "),s("tr",[s("td",[s("a",{attrs:{href:"https://www.php.net/manual/zh/function.addslashes.php",target:"_blank",rel:"noopener noreferrer"}},[t._v("addslashes"),s("OutboundLink")],1)]),t._v(" "),s("td",[t._v("使用反斜线引用字符串")])]),t._v(" "),s("tr",[s("td",[s("a",{attrs:{href:"https://www.php.net/manual/zh/function.bin2hex.php",target:"_blank",rel:"noopener noreferrer"}},[t._v("bin2hex"),s("OutboundLink")],1)]),t._v(" "),s("td",[t._v("函数把包含数据的二进制字符串转换为十六进制值")])]),t._v(" "),s("tr",[s("td",[s("a",{attrs:{href:"https://www.php.net/manual/zh/function.chop.php",target:"_blank",rel:"noopener noreferrer"}},[t._v("chop"),s("OutboundLink")],1)]),t._v(" "),s("td",[t._v("rtrim 的别名")])]),t._v(" "),s("tr",[s("td",[s("a",{attrs:{href:"https://www.php.net/manual/zh/function.chr.php",target:"_blank",rel:"noopener noreferrer"}},[t._v("chr"),s("OutboundLink")],1)]),t._v(" "),s("td",[t._v("返回指定的字符")])]),t._v(" "),s("tr",[s("td",[s("a",{attrs:{href:"https://www.php.net/manual/zh/function.chunk-split.php",target:"_blank",rel:"noopener noreferrer"}},[t._v("chunk_split"),s("OutboundLink")],1)]),t._v(" "),s("td",[t._v("将字符串分割成小块")])]),t._v(" "),s("tr",[s("td",[s("a",{attrs:{href:"https://www.php.net/manual/zh/function.convert-cyr-string.php",target:"_blank",rel:"noopener noreferrer"}},[t._v("convert_cyr_string"),s("OutboundLink")],1)]),t._v(" "),s("td",[t._v("将字符由一种 Cyrillic 字符转换成另一种")])]),t._v(" "),s("tr",[s("td",[s("a",{attrs:{href:"https://www.php.net/manual/zh/function.convert-uudecode.php",target:"_blank",rel:"noopener noreferrer"}},[t._v("convert_uudecode"),s("OutboundLink")],1)]),t._v(" "),s("td",[t._v("解码一个 uuencode 编码的字符串")])]),t._v(" "),s("tr",[s("td",[s("a",{attrs:{href:"https://www.php.net/manual/zh/function.convert-uuencode.php",target:"_blank",rel:"noopener noreferrer"}},[t._v("convert_uuencode"),s("OutboundLink")],1)]),t._v(" "),s("td",[t._v("使用 uuencode 编码一个字符串")])]),t._v(" "),s("tr",[s("td",[s("a",{attrs:{href:"https://www.php.net/manual/zh/function.count-chars.php",target:"_blank",rel:"noopener noreferrer"}},[t._v("count_chars"),s("OutboundLink")],1)]),t._v(" "),s("td",[t._v("返回字符串所用字符的信息")])]),t._v(" "),s("tr",[s("td",[s("a",{attrs:{href:"https://www.php.net/manual/zh/function.crc32.php",target:"_blank",rel:"noopener noreferrer"}},[t._v("crc32"),s("OutboundLink")],1)]),t._v(" "),s("td",[t._v("计算一个字符串的 crc32 多项式")])]),t._v(" "),s("tr",[s("td",[s("a",{attrs:{href:"https://www.php.net/manual/zh/function.crypt.php",target:"_blank",rel:"noopener noreferrer"}},[t._v("crypt"),s("OutboundLink")],1)]),t._v(" "),s("td",[t._v("单向字符串散列")])]),t._v(" "),s("tr",[s("td",[s("a",{attrs:{href:"https://www.php.net/manual/zh/function.echo.php",target:"_blank",rel:"noopener noreferrer"}},[t._v("echo"),s("OutboundLink")],1)]),t._v(" "),s("td",[t._v("输出一个或多个字符串")])]),t._v(" "),s("tr",[s("td",[s("a",{attrs:{href:"https://www.php.net/manual/zh/function.explode.php",target:"_blank",rel:"noopener noreferrer"}},[t._v("explode"),s("OutboundLink")],1)]),t._v(" "),s("td",[t._v("使用一个字符串分割另一个字符串")])]),t._v(" "),s("tr",[s("td",[s("a",{attrs:{href:"https://www.php.net/manual/zh/function.fprintf.php",target:"_blank",rel:"noopener noreferrer"}},[t._v("fprintf"),s("OutboundLink")],1)]),t._v(" "),s("td",[t._v("将格式化后的字符串写入到流")])]),t._v(" "),s("tr",[s("td",[s("a",{attrs:{href:"https://www.php.net/manual/zh/function.get-html-translation-table.php",target:"_blank",rel:"noopener noreferrer"}},[t._v("get_html_translation_table"),s("OutboundLink")],1)]),t._v(" "),s("td",[t._v("返回使用 htmlspecialchars 和 htmlentities 后的转换表")])]),t._v(" "),s("tr",[s("td",[s("a",{attrs:{href:"https://www.php.net/manual/zh/function.hebrev.php",target:"_blank",rel:"noopener noreferrer"}},[t._v("hebrev"),s("OutboundLink")],1)]),t._v(" "),s("td",[t._v("将逻辑顺序希伯来文（logical-Hebrew）转换为视觉顺序希伯来文（visual-Hebrew）")])]),t._v(" "),s("tr",[s("td",[s("a",{attrs:{href:"https://www.php.net/manual/zh/function.hebrevc.php",target:"_blank",rel:"noopener noreferrer"}},[t._v("hebrevc"),s("OutboundLink")],1)]),t._v(" "),s("td",[t._v("将逻辑顺序希伯来文（logical-Hebrew）转换为视觉顺序希伯来文（visual-Hebrew），并且转换换行符")])]),t._v(" "),s("tr",[s("td",[s("a",{attrs:{href:"https://www.php.net/manual/zh/function.hex2bin.php",target:"_blank",rel:"noopener noreferrer"}},[t._v("hex2bin"),s("OutboundLink")],1)]),t._v(" "),s("td",[t._v("转换十六进制字符串为二进制字符串")])]),t._v(" "),s("tr",[s("td",[s("a",{attrs:{href:"https://www.php.net/manual/zh/function.html-entity-decode.php",target:"_blank",rel:"noopener noreferrer"}},[t._v("html_entity_decode"),s("OutboundLink")],1)]),t._v(" "),s("td",[t._v("Convert HTML entities to their corresponding characters")])]),t._v(" "),s("tr",[s("td",[s("a",{attrs:{href:"https://www.php.net/manual/zh/function.htmlentities.php",target:"_blank",rel:"noopener noreferrer"}},[t._v("htmlentities"),s("OutboundLink")],1)]),t._v(" "),s("td",[t._v("将字符转换为 HTML 转义字符")])]),t._v(" "),s("tr",[s("td",[s("a",{attrs:{href:"https://www.php.net/manual/zh/function.htmlspecialchars-decode.php",target:"_blank",rel:"noopener noreferrer"}},[t._v("htmlspecialchars_decode"),s("OutboundLink")],1)]),t._v(" "),s("td",[t._v("将特殊的 HTML 实体转换回普通字符")])]),t._v(" "),s("tr",[s("td",[s("a",{attrs:{href:"https://www.php.net/manual/zh/function.htmlspecialchars.php",target:"_blank",rel:"noopener noreferrer"}},[t._v("htmlspecialchars"),s("OutboundLink")],1)]),t._v(" "),s("td",[t._v("将特殊字符转换为 HTML 实体")])]),t._v(" "),s("tr",[s("td",[s("a",{attrs:{href:"https://www.php.net/manual/zh/function.implode.php",target:"_blank",rel:"noopener noreferrer"}},[t._v("implode"),s("OutboundLink")],1)]),t._v(" "),s("td",[t._v("将一个一维数组的值转化为字符串")])]),t._v(" "),s("tr",[s("td",[s("a",{attrs:{href:"https://www.php.net/manual/zh/function.join.php",target:"_blank",rel:"noopener noreferrer"}},[t._v("join"),s("OutboundLink")],1)]),t._v(" "),s("td",[t._v("别名 implode")])]),t._v(" "),s("tr",[s("td",[s("a",{attrs:{href:"https://www.php.net/manual/zh/function.lcfirst.php",target:"_blank",rel:"noopener noreferrer"}},[t._v("lcfirst"),s("OutboundLink")],1)]),t._v(" "),s("td",[t._v("使一个字符串的第一个字符小写")])]),t._v(" "),s("tr",[s("td",[s("a",{attrs:{href:"https://www.php.net/manual/zh/function.levenshtein.php",target:"_blank",rel:"noopener noreferrer"}},[t._v("levenshtein"),s("OutboundLink")],1)]),t._v(" "),s("td",[t._v("计算两个字符串之间的编辑距离")])]),t._v(" "),s("tr",[s("td",[s("a",{attrs:{href:"https://www.php.net/manual/zh/function.localeconv.php",target:"_blank",rel:"noopener noreferrer"}},[t._v("localeconv"),s("OutboundLink")],1)]),t._v(" "),s("td",[t._v("Get numeric formatting information")])]),t._v(" "),s("tr",[s("td",[s("a",{attrs:{href:"https://www.php.net/manual/zh/function.ltrim.php",target:"_blank",rel:"noopener noreferrer"}},[t._v("ltrim"),s("OutboundLink")],1)]),t._v(" "),s("td",[t._v("删除字符串开头的空白字符（或其他字符）")])]),t._v(" "),s("tr",[s("td",[s("a",{attrs:{href:"https://www.php.net/manual/zh/function.md5-file.php",target:"_blank",rel:"noopener noreferrer"}},[t._v("md5_file"),s("OutboundLink")],1)]),t._v(" "),s("td",[t._v("计算指定文件的 MD5 散列值")])]),t._v(" "),s("tr",[s("td",[s("a",{attrs:{href:"https://www.php.net/manual/zh/function.md5.php",target:"_blank",rel:"noopener noreferrer"}},[t._v("md5"),s("OutboundLink")],1)]),t._v(" "),s("td",[t._v("计算字符串的 MD5 散列值")])]),t._v(" "),s("tr",[s("td",[s("a",{attrs:{href:"https://www.php.net/manual/zh/function.metaphone.php",target:"_blank",rel:"noopener noreferrer"}},[t._v("metaphone"),s("OutboundLink")],1)]),t._v(" "),s("td",[t._v("Calculate the metaphone key of a string")])]),t._v(" "),s("tr",[s("td",[s("a",{attrs:{href:"https://www.php.net/manual/zh/function.money-format.php",target:"_blank",rel:"noopener noreferrer"}},[t._v("money_format"),s("OutboundLink")],1)]),t._v(" "),s("td",[t._v("将数字格式化成货币字符串")])]),t._v(" "),s("tr",[s("td",[s("a",{attrs:{href:"https://www.php.net/manual/zh/function.nl-langinfo.php",target:"_blank",rel:"noopener noreferrer"}},[t._v("nl_langinfo"),s("OutboundLink")],1)]),t._v(" "),s("td",[t._v("Query language and locale information")])]),t._v(" "),s("tr",[s("td",[s("a",{attrs:{href:"https://www.php.net/manual/zh/function.nl2br.php",target:"_blank",rel:"noopener noreferrer"}},[t._v("nl2br"),s("OutboundLink")],1)]),t._v(" "),s("td",[t._v("在字符串所有新行之前插入 HTML 换行标记")])]),t._v(" "),s("tr",[s("td",[s("a",{attrs:{href:"https://www.php.net/manual/zh/function.number-format.php",target:"_blank",rel:"noopener noreferrer"}},[t._v("number_format"),s("OutboundLink")],1)]),t._v(" "),s("td",[t._v("以千位分隔符方式格式化一个数字")])]),t._v(" "),s("tr",[s("td",[s("a",{attrs:{href:"https://www.php.net/manual/zh/function.ord.php",target:"_blank",rel:"noopener noreferrer"}},[t._v("ord"),s("OutboundLink")],1)]),t._v(" "),s("td",[t._v("转换字符串第一个字节为 0-255 之间的值")])]),t._v(" "),s("tr",[s("td",[s("a",{attrs:{href:"https://www.php.net/manual/zh/function.parse-str.php",target:"_blank",rel:"noopener noreferrer"}},[t._v("parse_str"),s("OutboundLink")],1)]),t._v(" "),s("td",[t._v("将字符串解析成多个变量")])]),t._v(" "),s("tr",[s("td",[s("a",{attrs:{href:"https://www.php.net/manual/zh/function.print.php",target:"_blank",rel:"noopener noreferrer"}},[t._v("print"),s("OutboundLink")],1)]),t._v(" "),s("td",[t._v("输出字符串")])]),t._v(" "),s("tr",[s("td",[s("a",{attrs:{href:"https://www.php.net/manual/zh/function.printf.php",target:"_blank",rel:"noopener noreferrer"}},[t._v("printf"),s("OutboundLink")],1)]),t._v(" "),s("td",[t._v("输出格式化字符串")])]),t._v(" "),s("tr",[s("td",[s("a",{attrs:{href:"https://www.php.net/manual/zh/function.quoted-printable-decode.php",target:"_blank",rel:"noopener noreferrer"}},[t._v("quoted_printable_decode"),s("OutboundLink")],1)]),t._v(" "),s("td",[t._v("将 quoted-printable 字符串转换为 8-bit 字符串")])]),t._v(" "),s("tr",[s("td",[s("a",{attrs:{href:"https://www.php.net/manual/zh/function.quoted-printable-encode.php",target:"_blank",rel:"noopener noreferrer"}},[t._v("quoted_printable_encode"),s("OutboundLink")],1)]),t._v(" "),s("td",[t._v("将 8-bit 字符串转换成 quoted-printable 字符串")])]),t._v(" "),s("tr",[s("td",[s("a",{attrs:{href:"https://www.php.net/manual/zh/function.quotemeta.php",target:"_blank",rel:"noopener noreferrer"}},[t._v("quotemeta"),s("OutboundLink")],1)]),t._v(" "),s("td",[t._v("转义元字符集")])]),t._v(" "),s("tr",[s("td",[s("a",{attrs:{href:"https://www.php.net/manual/zh/function.rtrim.php",target:"_blank",rel:"noopener noreferrer"}},[t._v("rtrim"),s("OutboundLink")],1)]),t._v(" "),s("td",[t._v("删除字符串末端的空白字符（或者其他字符）")])]),t._v(" "),s("tr",[s("td",[s("a",{attrs:{href:"https://www.php.net/manual/zh/function.setlocale.php",target:"_blank",rel:"noopener noreferrer"}},[t._v("setlocale"),s("OutboundLink")],1)]),t._v(" "),s("td",[t._v("设置地区信息")])]),t._v(" "),s("tr",[s("td",[s("a",{attrs:{href:"https://www.php.net/manual/zh/function.sha1-file.php",target:"_blank",rel:"noopener noreferrer"}},[t._v("sha1_file"),s("OutboundLink")],1)]),t._v(" "),s("td",[t._v("计算文件的 sha1 散列值")])]),t._v(" "),s("tr",[s("td",[s("a",{attrs:{href:"https://www.php.net/manual/zh/function.sha1.php",target:"_blank",rel:"noopener noreferrer"}},[t._v("sha1"),s("OutboundLink")],1)]),t._v(" "),s("td",[t._v("计算字符串的 sha1 散列值")])]),t._v(" "),s("tr",[s("td",[s("a",{attrs:{href:"https://www.php.net/manual/zh/function.similar-text.php",target:"_blank",rel:"noopener noreferrer"}},[t._v("similar_text"),s("OutboundLink")],1)]),t._v(" "),s("td",[t._v("计算两个字符串的相似度")])]),t._v(" "),s("tr",[s("td",[s("a",{attrs:{href:"https://www.php.net/manual/zh/function.soundex.php",target:"_blank",rel:"noopener noreferrer"}},[t._v("soundex"),s("OutboundLink")],1)]),t._v(" "),s("td",[t._v("Calculate the soundex key of a string")])]),t._v(" "),s("tr",[s("td",[s("a",{attrs:{href:"https://www.php.net/manual/zh/function.sprintf.php",target:"_blank",rel:"noopener noreferrer"}},[t._v("sprintf"),s("OutboundLink")],1)]),t._v(" "),s("td",[t._v("Return a formatted string")])]),t._v(" "),s("tr",[s("td",[s("a",{attrs:{href:"https://www.php.net/manual/zh/function.sscanf.php",target:"_blank",rel:"noopener noreferrer"}},[t._v("sscanf"),s("OutboundLink")],1)]),t._v(" "),s("td",[t._v("根据指定格式解析输入的字符")])]),t._v(" "),s("tr",[s("td",[s("a",{attrs:{href:"https://www.php.net/manual/zh/function.str-getcsv.php",target:"_blank",rel:"noopener noreferrer"}},[t._v("str_getcsv"),s("OutboundLink")],1)]),t._v(" "),s("td",[t._v("解析 CSV 字符串为一个数组")])]),t._v(" "),s("tr",[s("td",[s("a",{attrs:{href:"https://www.php.net/manual/zh/function.str-ireplace.php",target:"_blank",rel:"noopener noreferrer"}},[t._v("str_ireplace"),s("OutboundLink")],1)]),t._v(" "),s("td",[t._v("str_replace 的忽略大小写版本")])]),t._v(" "),s("tr",[s("td",[s("a",{attrs:{href:"https://www.php.net/manual/zh/function.str-pad.php",target:"_blank",rel:"noopener noreferrer"}},[t._v("str_pad"),s("OutboundLink")],1)]),t._v(" "),s("td",[t._v("使用另一个字符串填充字符串为指定长度")])]),t._v(" "),s("tr",[s("td",[s("a",{attrs:{href:"https://www.php.net/manual/zh/function.str-repeat.php",target:"_blank",rel:"noopener noreferrer"}},[t._v("str_repeat"),s("OutboundLink")],1)]),t._v(" "),s("td",[t._v("重复一个字符串")])]),t._v(" "),s("tr",[s("td",[s("a",{attrs:{href:"https://www.php.net/manual/zh/function.str-replace.php",target:"_blank",rel:"noopener noreferrer"}},[t._v("str_replace"),s("OutboundLink")],1)]),t._v(" "),s("td",[t._v("子字符串替换")])]),t._v(" "),s("tr",[s("td",[s("a",{attrs:{href:"https://www.php.net/manual/zh/function.str-rot13.php",target:"_blank",rel:"noopener noreferrer"}},[t._v("str_rot13"),s("OutboundLink")],1)]),t._v(" "),s("td",[t._v("对字符串执行 ROT13 转换")])]),t._v(" "),s("tr",[s("td",[s("a",{attrs:{href:"https://www.php.net/manual/zh/function.str-shuffle.php",target:"_blank",rel:"noopener noreferrer"}},[t._v("str_shuffle"),s("OutboundLink")],1)]),t._v(" "),s("td",[t._v("随机打乱一个字符串")])]),t._v(" "),s("tr",[s("td",[s("a",{attrs:{href:"https://www.php.net/manual/zh/function.str-split.php",target:"_blank",rel:"noopener noreferrer"}},[t._v("str_split"),s("OutboundLink")],1)]),t._v(" "),s("td",[t._v("将字符串转换为数组")])]),t._v(" "),s("tr",[s("td",[s("a",{attrs:{href:"https://www.php.net/manual/zh/function.str-word-count.php",target:"_blank",rel:"noopener noreferrer"}},[t._v("str_word_count"),s("OutboundLink")],1)]),t._v(" "),s("td",[t._v("返回字符串中单词的使用情况")])]),t._v(" "),s("tr",[s("td",[s("a",{attrs:{href:"https://www.php.net/manual/zh/function.strcasecmp.php",target:"_blank",rel:"noopener noreferrer"}},[t._v("strcasecmp"),s("OutboundLink")],1)]),t._v(" "),s("td",[t._v("二进制安全比较字符串（不区分大小写）")])]),t._v(" "),s("tr",[s("td",[s("a",{attrs:{href:"https://www.php.net/manual/zh/function.strchr.php",target:"_blank",rel:"noopener noreferrer"}},[t._v("strchr"),s("OutboundLink")],1)]),t._v(" "),s("td",[t._v("别名 strstr")])]),t._v(" "),s("tr",[s("td",[s("a",{attrs:{href:"https://www.php.net/manual/zh/function.strcmp.php",target:"_blank",rel:"noopener noreferrer"}},[t._v("strcmp"),s("OutboundLink")],1)]),t._v(" "),s("td",[t._v("二进制安全字符串比较")])]),t._v(" "),s("tr",[s("td",[s("a",{attrs:{href:"https://www.php.net/manual/zh/function.strcoll.php",target:"_blank",rel:"noopener noreferrer"}},[t._v("strcoll"),s("OutboundLink")],1)]),t._v(" "),s("td",[t._v("基于区域设置的字符串比较")])]),t._v(" "),s("tr",[s("td",[s("a",{attrs:{href:"https://www.php.net/manual/zh/function.strcspn.php",target:"_blank",rel:"noopener noreferrer"}},[t._v("strcspn"),s("OutboundLink")],1)]),t._v(" "),s("td",[t._v("获取不匹配遮罩的起始子字符串的长度")])]),t._v(" "),s("tr",[s("td",[s("a",{attrs:{href:"https://www.php.net/manual/zh/function.strip-tags.php",target:"_blank",rel:"noopener noreferrer"}},[t._v("strip_tags"),s("OutboundLink")],1)]),t._v(" "),s("td",[t._v("从字符串中去除 HTML 和 PHP 标记")])]),t._v(" "),s("tr",[s("td",[s("a",{attrs:{href:"https://www.php.net/manual/zh/function.stripcslashes.php",target:"_blank",rel:"noopener noreferrer"}},[t._v("stripcslashes"),s("OutboundLink")],1)]),t._v(" "),s("td",[t._v("反引用一个使用 addcslashes 转义的字符串")])]),t._v(" "),s("tr",[s("td",[s("a",{attrs:{href:"https://www.php.net/manual/zh/function.stripos.php",target:"_blank",rel:"noopener noreferrer"}},[t._v("stripos"),s("OutboundLink")],1)]),t._v(" "),s("td",[t._v("查找字符串首次出现的位置（不区分大小写）")])]),t._v(" "),s("tr",[s("td",[s("a",{attrs:{href:"https://www.php.net/manual/zh/function.stripslashes.php",target:"_blank",rel:"noopener noreferrer"}},[t._v("stripslashes"),s("OutboundLink")],1)]),t._v(" "),s("td",[t._v("反引用一个引用字符串")])]),t._v(" "),s("tr",[s("td",[s("a",{attrs:{href:"https://www.php.net/manual/zh/function.stristr.php",target:"_blank",rel:"noopener noreferrer"}},[t._v("stristr"),s("OutboundLink")],1)]),t._v(" "),s("td",[t._v("strstr 函数的忽略大小写版本")])]),t._v(" "),s("tr",[s("td",[s("a",{attrs:{href:"https://www.php.net/manual/zh/function.strlen.php",target:"_blank",rel:"noopener noreferrer"}},[t._v("strlen"),s("OutboundLink")],1)]),t._v(" "),s("td",[t._v("获取字符串长度")])]),t._v(" "),s("tr",[s("td",[s("a",{attrs:{href:"https://www.php.net/manual/zh/function.strnatcasecmp.php",target:"_blank",rel:"noopener noreferrer"}},[t._v("strnatcasecmp"),s("OutboundLink")],1)]),t._v(" "),s("td",[t._v("使用“自然顺序”算法比较字符串（不区分大小写）")])]),t._v(" "),s("tr",[s("td",[s("a",{attrs:{href:"https://www.php.net/manual/zh/function.strnatcmp.php",target:"_blank",rel:"noopener noreferrer"}},[t._v("strnatcmp"),s("OutboundLink")],1)]),t._v(" "),s("td",[t._v("使用自然排序算法比较字符串")])]),t._v(" "),s("tr",[s("td",[s("a",{attrs:{href:"https://www.php.net/manual/zh/function.strncasecmp.php",target:"_blank",rel:"noopener noreferrer"}},[t._v("strncasecmp"),s("OutboundLink")],1)]),t._v(" "),s("td",[t._v("二进制安全比较字符串开头的若干个字符（不区分大小写）")])]),t._v(" "),s("tr",[s("td",[s("a",{attrs:{href:"https://www.php.net/manual/zh/function.strncmp.php",target:"_blank",rel:"noopener noreferrer"}},[t._v("strncmp"),s("OutboundLink")],1)]),t._v(" "),s("td",[t._v("二进制安全比较字符串开头的若干个字符")])]),t._v(" "),s("tr",[s("td",[s("a",{attrs:{href:"https://www.php.net/manual/zh/function.strpbrk.php",target:"_blank",rel:"noopener noreferrer"}},[t._v("strpbrk"),s("OutboundLink")],1)]),t._v(" "),s("td",[t._v("在字符串中查找一组字符的任何一个字符")])]),t._v(" "),s("tr",[s("td",[s("a",{attrs:{href:"https://www.php.net/manual/zh/function.strpos.php",target:"_blank",rel:"noopener noreferrer"}},[t._v("strpos"),s("OutboundLink")],1)]),t._v(" "),s("td",[t._v("查找字符串首次出现的位置")])]),t._v(" "),s("tr",[s("td",[s("a",{attrs:{href:"https://www.php.net/manual/zh/function.strrchr.php",target:"_blank",rel:"noopener noreferrer"}},[t._v("strrchr"),s("OutboundLink")],1)]),t._v(" "),s("td",[t._v("查找指定字符在字符串中的最后一次出现")])]),t._v(" "),s("tr",[s("td",[s("a",{attrs:{href:"https://www.php.net/manual/zh/function.strrev.php",target:"_blank",rel:"noopener noreferrer"}},[t._v("strrev"),s("OutboundLink")],1)]),t._v(" "),s("td",[t._v("反转字符串")])]),t._v(" "),s("tr",[s("td",[s("a",{attrs:{href:"https://www.php.net/manual/zh/function.strripos.php",target:"_blank",rel:"noopener noreferrer"}},[t._v("strripos"),s("OutboundLink")],1)]),t._v(" "),s("td",[t._v("计算指定字符串在目标字符串中最后一次出现的位置（不区分大小写）")])]),t._v(" "),s("tr",[s("td",[s("a",{attrs:{href:"https://www.php.net/manual/zh/function.strrpos.php",target:"_blank",rel:"noopener noreferrer"}},[t._v("strrpos"),s("OutboundLink")],1)]),t._v(" "),s("td",[t._v("计算指定字符串在目标字符串中最后一次出现的位置")])]),t._v(" "),s("tr",[s("td",[s("a",{attrs:{href:"https://www.php.net/manual/zh/function.strspn.php",target:"_blank",rel:"noopener noreferrer"}},[t._v("strspn"),s("OutboundLink")],1)]),t._v(" "),s("td",[t._v("计算字符串中全部字符都存在于指定字符集合中的第一段子串的长度。")])]),t._v(" "),s("tr",[s("td",[s("a",{attrs:{href:"https://www.php.net/manual/zh/function.strstr.php",target:"_blank",rel:"noopener noreferrer"}},[t._v("strstr"),s("OutboundLink")],1)]),t._v(" "),s("td",[t._v("查找字符串的首次出现")])]),t._v(" "),s("tr",[s("td",[s("a",{attrs:{href:"https://www.php.net/manual/zh/function.strtok.php",target:"_blank",rel:"noopener noreferrer"}},[t._v("strtok"),s("OutboundLink")],1)]),t._v(" "),s("td",[t._v("标记分割字符串")])]),t._v(" "),s("tr",[s("td",[s("a",{attrs:{href:"https://www.php.net/manual/zh/function.strtolower.php",target:"_blank",rel:"noopener noreferrer"}},[t._v("strtolower"),s("OutboundLink")],1)]),t._v(" "),s("td",[t._v("将字符串转化为小写")])]),t._v(" "),s("tr",[s("td",[s("a",{attrs:{href:"https://www.php.net/manual/zh/function.strtoupper.php",target:"_blank",rel:"noopener noreferrer"}},[t._v("strtoupper"),s("OutboundLink")],1)]),t._v(" "),s("td",[t._v("将字符串转化为大写")])]),t._v(" "),s("tr",[s("td",[s("a",{attrs:{href:"https://www.php.net/manual/zh/function.strtr.php",target:"_blank",rel:"noopener noreferrer"}},[t._v("strtr"),s("OutboundLink")],1)]),t._v(" "),s("td",[t._v("转换指定字符")])]),t._v(" "),s("tr",[s("td",[s("a",{attrs:{href:"https://www.php.net/manual/zh/function.substr-compare.php",target:"_blank",rel:"noopener noreferrer"}},[t._v("substr_compare"),s("OutboundLink")],1)]),t._v(" "),s("td",[t._v("二进制安全比较字符串（从偏移位置比较指定长度）")])]),t._v(" "),s("tr",[s("td",[s("a",{attrs:{href:"https://www.php.net/manual/zh/function.substr-count.php",target:"_blank",rel:"noopener noreferrer"}},[t._v("substr_count"),s("OutboundLink")],1)]),t._v(" "),s("td",[t._v("计算字串出现的次数")])]),t._v(" "),s("tr",[s("td",[s("a",{attrs:{href:"https://www.php.net/manual/zh/function.substr-replace.php",target:"_blank",rel:"noopener noreferrer"}},[t._v("substr_replace"),s("OutboundLink")],1)]),t._v(" "),s("td",[t._v("替换字符串的子串")])]),t._v(" "),s("tr",[s("td",[s("a",{attrs:{href:"https://www.php.net/manual/zh/function.substr.php",target:"_blank",rel:"noopener noreferrer"}},[t._v("substr"),s("OutboundLink")],1)]),t._v(" "),s("td",[t._v("返回字符串的子串")])]),t._v(" "),s("tr",[s("td",[s("a",{attrs:{href:"https://www.php.net/manual/zh/function.trim.php",target:"_blank",rel:"noopener noreferrer"}},[t._v("trim"),s("OutboundLink")],1)]),t._v(" "),s("td",[t._v("去除字符串首尾处的空白字符（或者其他字符）")])]),t._v(" "),s("tr",[s("td",[s("a",{attrs:{href:"https://www.php.net/manual/zh/function.ucfirst.php",target:"_blank",rel:"noopener noreferrer"}},[t._v("ucfirst"),s("OutboundLink")],1)]),t._v(" "),s("td",[t._v("将字符串的首字母转换为大写")])]),t._v(" "),s("tr",[s("td",[s("a",{attrs:{href:"https://www.php.net/manual/zh/function.ucwords.php",target:"_blank",rel:"noopener noreferrer"}},[t._v("ucwords"),s("OutboundLink")],1)]),t._v(" "),s("td",[t._v("将字符串中每个单词的首字母转换为大写")])]),t._v(" "),s("tr",[s("td",[s("a",{attrs:{href:"https://www.php.net/manual/zh/function.vfprintf.php",target:"_blank",rel:"noopener noreferrer"}},[t._v("vfprintf"),s("OutboundLink")],1)]),t._v(" "),s("td",[t._v("将格式化字符串写入流")])]),t._v(" "),s("tr",[s("td",[s("a",{attrs:{href:"https://www.php.net/manual/zh/function.vprintf.php",target:"_blank",rel:"noopener noreferrer"}},[t._v("vprintf"),s("OutboundLink")],1)]),t._v(" "),s("td",[t._v("输出格式化字符串")])]),t._v(" "),s("tr",[s("td",[s("a",{attrs:{href:"https://www.php.net/manual/zh/function.vsprintf.php",target:"_blank",rel:"noopener noreferrer"}},[t._v("vsprintf"),s("OutboundLink")],1)]),t._v(" "),s("td",[t._v("返回格式化字符串")])]),t._v(" "),s("tr",[s("td",[s("a",{attrs:{href:"https://www.php.net/manual/zh/function.wordwrap.php",target:"_blank",rel:"noopener noreferrer"}},[t._v("wordwrap"),s("OutboundLink")],1)]),t._v(" "),s("td",[t._v("打断字符串为指定数量的字串")])])])]),t._v(" "),s("p",[s("strong",[s("code",[t._v("URL")]),t._v("字符串函数")]),s("a",{attrs:{href:"https://www.php.net/manual/zh/ref.url.php",target:"_blank",rel:"noopener noreferrer"}},[t._v("点击查看"),s("OutboundLink")],1),t._v(";")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",[t._v("函数名")]),t._v(" "),s("th",[t._v("简介")])])]),t._v(" "),s("tbody",[s("tr",[s("td",[s("a",{attrs:{href:"https://www.php.net/manual/zh/function.base64_decode.php",target:"_blank",rel:"noopener noreferrer"}},[t._v("base64_decode"),s("OutboundLink")],1)]),t._v(" "),s("td",[t._v("对使用 MIME base64 编码的数据进行解码")])]),t._v(" "),s("tr",[s("td",[s("a",{attrs:{href:"https://www.php.net/manual/zh/function.base64-encode.php",target:"_blank",rel:"noopener noreferrer"}},[t._v("base64_encode"),s("OutboundLink")],1)]),t._v(" "),s("td",[t._v("使用 MIME base64 对数据进行编码")])]),t._v(" "),s("tr",[s("td",[s("a",{attrs:{href:"https://www.php.net/manual/zh/function.get-headers.php",target:"_blank",rel:"noopener noreferrer"}},[t._v("get_headers"),s("OutboundLink")],1)]),t._v(" "),s("td",[t._v("取得服务器响应一个 HTTP 请求所发送的所有标头")])]),t._v(" "),s("tr",[s("td",[s("a",{attrs:{href:"https://www.php.net/manual/zh/function.get-meta-tags.php",target:"_blank",rel:"noopener noreferrer"}},[t._v("get_meta_tags"),s("OutboundLink")],1)]),t._v(" "),s("td",[t._v("从一个文件中提取所有的 meta 标签 content 属性，返回一个数组")])]),t._v(" "),s("tr",[s("td",[s("a",{attrs:{href:"https://www.php.net/manual/zh/function.http-build-query.php",target:"_blank",rel:"noopener noreferrer"}},[t._v("http_build_query"),s("OutboundLink")],1)]),t._v(" "),s("td",[t._v("生成 URL-encode 之后的请求字符串")])]),t._v(" "),s("tr",[s("td",[s("a",{attrs:{href:"https://www.php.net/manual/zh/function.parse-url.php",target:"_blank",rel:"noopener noreferrer"}},[t._v("parse_url"),s("OutboundLink")],1)]),t._v(" "),s("td",[t._v("解析 URL，返回其组成部分")])]),t._v(" "),s("tr",[s("td",[s("a",{attrs:{href:"https://www.php.net/manual/zh/function.rawurldecode.php",target:"_blank",rel:"noopener noreferrer"}},[t._v("rawurldecode"),s("OutboundLink")],1)]),t._v(" "),s("td",[t._v("对已编码的 URL 字符串进行解码")])]),t._v(" "),s("tr",[s("td",[s("a",{attrs:{href:"https://www.php.net/manual/zh/function.rawurlencode.php",target:"_blank",rel:"noopener noreferrer"}},[t._v("rawurlencode"),s("OutboundLink")],1)]),t._v(" "),s("td",[t._v("按照 RFC 3986 对 URL 进行编码")])]),t._v(" "),s("tr",[s("td",[s("a",{attrs:{href:"https://www.php.net/manual/zh/function.urldecode.php",target:"_blank",rel:"noopener noreferrer"}},[t._v("urldecode"),s("OutboundLink")],1)]),t._v(" "),s("td",[t._v("解码已编码的 URL 字符串")])]),t._v(" "),s("tr",[s("td",[s("a",{attrs:{href:"https://www.php.net/manual/zh/function.urlencode.php",target:"_blank",rel:"noopener noreferrer"}},[t._v("urlencode"),s("OutboundLink")],1)]),t._v(" "),s("td",[t._v("编码 URL 字符串")])])])]),t._v(" "),s("p",[s("strong",[t._v("字符类型检测函数")]),s("a",{attrs:{href:"https://www.php.net/manual/zh/ref.ctype.php",target:"_blank",rel:"noopener noreferrer"}},[t._v("点击查看"),s("OutboundLink")],1)]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",[t._v("函数名")]),t._v(" "),s("th",[t._v("简介")])])]),t._v(" "),s("tbody",[s("tr",[s("td",[s("a",{attrs:{href:"https://www.php.net/manual/zh/function.ctype_alnum.php",target:"_blank",rel:"noopener noreferrer"}},[t._v("ctype_alnum"),s("OutboundLink")],1)]),t._v(" "),s("td",[t._v("做字母和数字字符检测")])]),t._v(" "),s("tr",[s("td",[s("a",{attrs:{href:"https://www.php.net/manual/zh/function.ctype-alpha.php",target:"_blank",rel:"noopener noreferrer"}},[t._v("ctype_alpha"),s("OutboundLink")],1)]),t._v(" "),s("td",[t._v("做纯字符检测")])]),t._v(" "),s("tr",[s("td",[s("a",{attrs:{href:"https://www.php.net/manual/zh/function.ctype-cntrl.php",target:"_blank",rel:"noopener noreferrer"}},[t._v("ctype_cntrl"),s("OutboundLink")],1)]),t._v(" "),s("td",[t._v("做控制字符检测")])]),t._v(" "),s("tr",[s("td",[s("a",{attrs:{href:"https://www.php.net/manual/zh/function.ctype-digit.php",target:"_blank",rel:"noopener noreferrer"}},[t._v("ctype_digit"),s("OutboundLink")],1)]),t._v(" "),s("td",[t._v("做纯数字检测")])]),t._v(" "),s("tr",[s("td",[s("a",{attrs:{href:"https://www.php.net/manual/zh/function.ctype-graph.php",target:"_blank",rel:"noopener noreferrer"}},[t._v("ctype_graph"),s("OutboundLink")],1)]),t._v(" "),s("td",[t._v("做可打印字符串检测，空格除外")])]),t._v(" "),s("tr",[s("td",[s("a",{attrs:{href:"https://www.php.net/manual/zh/function.ctype-lower.php",target:"_blank",rel:"noopener noreferrer"}},[t._v("ctype_lower"),s("OutboundLink")],1)]),t._v(" "),s("td",[t._v("做小写字符检测")])]),t._v(" "),s("tr",[s("td",[s("a",{attrs:{href:"https://www.php.net/manual/zh/function.ctype-print.php",target:"_blank",rel:"noopener noreferrer"}},[t._v("ctype_print"),s("OutboundLink")],1)]),t._v(" "),s("td",[t._v("做可打印字符检测")])]),t._v(" "),s("tr",[s("td",[s("a",{attrs:{href:"https://www.php.net/manual/zh/function.ctype-punct.php",target:"_blank",rel:"noopener noreferrer"}},[t._v("ctype_punct"),s("OutboundLink")],1)]),t._v(" "),s("td",[t._v("检测可打印的字符是不是不包含空白、数字和字母")])]),t._v(" "),s("tr",[s("td",[s("a",{attrs:{href:"https://www.php.net/manual/zh/function.ctype-space.php",target:"_blank",rel:"noopener noreferrer"}},[t._v("ctype_space"),s("OutboundLink")],1)]),t._v(" "),s("td",[t._v("做空白字符检测")])]),t._v(" "),s("tr",[s("td",[s("a",{attrs:{href:"https://www.php.net/manual/zh/function.ctype-upper.php",target:"_blank",rel:"noopener noreferrer"}},[t._v("ctype_upper"),s("OutboundLink")],1)]),t._v(" "),s("td",[t._v("做大写字母检测")])]),t._v(" "),s("tr",[s("td",[s("a",{attrs:{href:"https://www.php.net/manual/zh/function.ctype-xdigit.php",target:"_blank",rel:"noopener noreferrer"}},[t._v("ctype_xdigit"),s("OutboundLink")],1)]),t._v(" "),s("td",[t._v("检测字符串是否只包含十六进制字符")])])])]),t._v(" "),s("h2",{attrs:{id:"转换成字符串"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#转换成字符串"}},[t._v("#")]),t._v(" 转换成字符串")]),t._v(" "),s("ul",[s("li",[t._v("一个值可以通过在他前面加上 "),s("code",[t._v("(string)")]),t._v(" 或者使用 "),s("code",[t._v("strval()")]),t._v(" 函数来转换成字符串。")]),t._v(" "),s("li",[t._v("而在一个需要字符串的表达式中，会自动转换为字符串。如 "),s("code",[t._v("echo")]),t._v(" 和 "),s("code",[t._v("print")]),t._v("。")]),t._v(" "),s("li",[t._v("或者在一个变量和一个字符串进行对比的时候也会将变量转换为字符串。")]),t._v(" "),s("li",[s("code",[t._v("TRUE")]),t._v(" 会被转换成字符串 "),s("code",[t._v("'1'")]),t._v("，"),s("code",[t._v("FALSE")]),t._v(" 会被转换成空字符串。")]),t._v(" "),s("li",[t._v("一个整数或者浮点数也会被转换成字面样式上的数字。")]),t._v(" "),s("li",[t._v("数组会被转换成 "),s("code",[t._v("'Array'")]),t._v(" 这串字符串。因此，"),s("code",[t._v("echo")]),t._v(" 和 "),s("code",[t._v("print")]),t._v(" 无法显示数组的具体内容。")]),t._v(" "),s("li",[t._v("对象会被转换成 "),s("code",[t._v("'Object'")]),t._v(" 这串字符串。如果为了得到对象的类的名称，可以用 "),s("code",[t._v("get_class()")]),t._v(" 函数。")]),t._v(" "),s("li",[s("code",[t._v("NULL")]),t._v(" 会被转换成空字符串。")]),t._v(" "),s("li",[t._v("如何获取数组和对象的具体值？可以使用 "),s("code",[t._v("print_r()")]),t._v(" 或者 "),s("code",[t._v("var_dump()")]),t._v(" 这类函数。")]),t._v(" "),s("li",[t._v("大部分的 "),s("code",[t._v("PHP")]),t._v(" 值可以转变成 "),s("code",[t._v("string")]),t._v(" 来永久保存，这被称作串行化，可以用函数 "),s("code",[t._v("serialize()")]),t._v(" 来实现。")])]),t._v(" "),s("h2",{attrs:{id:"字符串转换成数值"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#字符串转换成数值"}},[t._v("#")]),t._v(" 字符串转换成数值")]),t._v(" "),s("p",[t._v("如果该字符串没有包含 "),s("code",[t._v(".")]),t._v(" "),s("code",[t._v("e")]),t._v(" "),s("code",[t._v("E")]),t._v(" 并且其数字值在整型的范围内，那么该字符串将被当成 "),s("code",[t._v("integer")]),t._v(" 来取值。其它所有情况下都被作为 "),s("code",[t._v("float")]),t._v(" 来取值。\n"),s("br")]),t._v(" "),s("p",[s("strong",[t._v("该字符串的开始部分决定了他的值。")]),t._v(" 如果该字符串以合法的数值开始，那么就采用该值，否则就会返回 "),s("code",[t._v("0")]),t._v("。合法数值由可选的正负号，后面跟着一个或多个数字（可能有小数点），再跟着可选的指数部分。指数部分由 'e' 或 'E' 后面跟着一个或多个数字构成。")]),t._v(" "),s("div",{staticClass:"language-php line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-php"}},[s("code",[s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$foo")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string double-quoted-string"}},[t._v('"10.5"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# (float)11.5")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$foo")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string double-quoted-string"}},[t._v('"-1.3e3"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# (float)-1299")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$foo")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string double-quoted-string"}},[t._v('"bob-1.3e3"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# (int)1")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$foo")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string double-quoted-string"}},[t._v('"bob3"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# (int)1")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$foo")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string double-quoted-string"}},[t._v('"10 Small Pigs"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# (int)11")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$foo")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string double-quoted-string"}},[t._v('"10.2 Little Piggies"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" \n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# (float)14.2")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$foo")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string double-quoted-string"}},[t._v('"10.0 pigs "')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# (float)11")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$foo")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string double-quoted-string"}},[t._v('"10.0 pigs "')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1.0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# (float)11")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br"),s("span",{staticClass:"line-number"},[t._v("8")]),s("br"),s("span",{staticClass:"line-number"},[t._v("9")]),s("br"),s("span",{staticClass:"line-number"},[t._v("10")]),s("br"),s("span",{staticClass:"line-number"},[t._v("11")]),s("br"),s("span",{staticClass:"line-number"},[t._v("12")]),s("br"),s("span",{staticClass:"line-number"},[t._v("13")]),s("br"),s("span",{staticClass:"line-number"},[t._v("14")]),s("br"),s("span",{staticClass:"line-number"},[t._v("15")]),s("br"),s("span",{staticClass:"line-number"},[t._v("16")]),s("br"),s("span",{staticClass:"line-number"},[t._v("17")]),s("br"),s("span",{staticClass:"line-number"},[t._v("18")]),s("br"),s("span",{staticClass:"line-number"},[t._v("19")]),s("br"),s("span",{staticClass:"line-number"},[t._v("20")]),s("br"),s("span",{staticClass:"line-number"},[t._v("21")]),s("br"),s("span",{staticClass:"line-number"},[t._v("22")]),s("br"),s("span",{staticClass:"line-number"},[t._v("23")]),s("br")])]),s("h2",{attrs:{id:"字符串类型详解-直接复制的。没看懂"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#字符串类型详解-直接复制的。没看懂"}},[t._v("#")]),t._v(" 字符串类型详解（直接复制的。没看懂）")]),t._v(" "),s("p",[t._v("PHP 中的 string 的实现方式是一个由字节组成的数组再加上一个整数指明缓冲区长度。并无如何将字节转换成字符的信息，由程序员来决定。字符串由什么值来组成并无限制；特别的，其值为 0（“NUL bytes”）的字节可以处于字符串任何位置（不过有几个函数，在本手册中被称为非“二进制安全”的，也许会把 NUL 字节之后的数据全都忽略）。")]),t._v(" "),s("p",[t._v("字符串类型的此特性解释了为什么 PHP 中没有单独的“byte”类型 - 已经用字符串来代替了。返回非文本值的函数 - 例如从网络套接字读取的任意数据 - 仍会返回字符串。")]),t._v(" "),s("p",[t._v('由于 PHP 并不特别指明字符串的编码，那字符串到底是怎样编码的呢？例如字符串 "á" 到底是等于 "\\xE1"（ISO-8859-1），"\\xC3\\xA1"（UTF-8，C form），"\\x61\\xCC\\x81"（UTF-8，D form）还是任何其它可能的表达呢？答案是字符串会被按照该脚本文件相同的编码方式来编码。因此如果一个脚本的编码是 ISO-8859-1，则其中的字符串也会被编码为 ISO-8859-1，以此类推。不过这并不适用于激活了 Zend Multibyte 时；此时脚本可以是以任何方式编码的（明确指定或被自动检测）然后被转换为某种内部编码，然后字符串将被用此方式编码。注意脚本的编码有一些约束（如果激活了 Zend Multibyte 则是其内部编码）- 这意味着此编码应该是 ASCII 的兼容超集，例如 UTF-8 或 ISO-8859-1。不过要注意，依赖状态的编码其中相同的字节值可以用于首字母和非首字母而转换状态，这可能会造成问题。')]),t._v(" "),s("p",[t._v("当然了，要做到有用，操作文本的函数必须假定字符串是如何编码的。不幸的是，PHP 关于此的函数有很多变种：")]),t._v(" "),s("p",[t._v('某些函数假定字符串是以单字节编码的，但并不需要将字节解释为特定的字符。例如 substr()，strpos()，strlen() 和 strcmp()。理解这些函数的另一种方法是它们作用于内存缓冲区，即按照字节和字节下标操作。\n某些函数被传递入了字符串的编码方式，也可能会假定默认无此信息。例如 htmlentities() 和 mbstring 扩展中的大部分函数。\n其它函数使用了当前区域（见 setlocale()），但是逐字节操作。例如 strcasecmp()，strtoupper() 和 ucfirst()。这意味着这些函数只能用于单字节编码，而且编码要与区域匹配。例如 strtoupper("á") 在区域设定正确并且 á 是单字节编码时会返回 "Á"。如果是用 UTF-8 编码则不会返回正确结果，其结果根据当前区域有可能返回损坏的值。\n最后一些函数会假定字符串是使用某特定编码的，通常是 UTF-8。intl 扩展和 PCRE（上例中仅在使用了 u 修饰符时）扩展中的大部分函数都是这样。尽管这是由于其特殊用途，utf8_decode() 会假定 UTF-8 编码而 utf8_encode() 会假定 ISO-8859-1 编码。\n最后，要书写能够正确使用 Unicode 的程序依赖于很小心地避免那些可能会损坏数据的函数。要使用来自于 intl 和 mbstring 扩展的函数。不过使用能处理 Unicode 编码的函数只是个开始。不管用何种语言提供的函数，最基本的还是了解 Unicode 规格。例如一个程序如果假定只有大写和小写，那可是大错特错。')])])}),[],!1,null,null,null);n.default=a.exports}}]);