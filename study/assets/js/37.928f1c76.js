(window.webpackJsonp=window.webpackJsonp||[]).push([[37],{396:function(t,s,_){"use strict";_.r(s);var a=_(49),n=Object(a.a)({},(function(){var t=this,s=t.$createElement,_=t._self._c||s;return _("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[_("h1",{attrs:{id:"常量"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#常量"}},[t._v("#")]),t._v(" 常量")]),t._v(" "),_("p",[t._v("常量在脚本执行之前他的值是不能改变的。常量的命名和变量一样，对大小写敏感。一般情况下常量名都是大写的。")]),t._v(" "),_("h2",{attrs:{id:"语法"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#语法"}},[t._v("#")]),t._v(" 语法")]),t._v(" "),_("p",[t._v("常量可以使用 "),_("code",[t._v("define()")]),t._v(" 函数来定义。在 "),_("code",[t._v("PHP 5.3")]),t._v(" 之后，可以使用 "),_("code",[t._v("const")]),t._v(" 关键字来定义常量。一个常量一单定义以后就无法改变。")]),t._v(" "),_("p",[t._v("常量只能设置标量数据，字符串、整型、浮点型、布尔型。还可以定义资源型常量，但是一般情况下不这么做，因为会导致不可预料的后果。")]),t._v(" "),_("p",[t._v("获取常量的值可以直接使用名字来获取，不用像变量那样加 "),_("code",[t._v("$")]),t._v(" 符号。")]),t._v(" "),_("p",[t._v("常量和变量的不同")]),t._v(" "),_("ul",[_("li",[t._v("常量前面没有 "),_("code",[t._v("$")]),t._v(" 符号")]),t._v(" "),_("li",[t._v("常量只能用 "),_("code",[t._v("define()")]),t._v(" 来定义，不能通过表达式来定义。")]),t._v(" "),_("li",[t._v("常量可以不理会作用域，可以在任何地方定义和使用。")]),t._v(" "),_("li",[t._v("常量一旦定义就不能修改或取消定义")]),t._v(" "),_("li",[t._v("常量的值只能是标量")])]),t._v(" "),_("h3",{attrs:{id:"constant"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#constant"}},[t._v("#")]),t._v(" "),_("code",[t._v("constant()")])]),t._v(" "),_("p",[t._v("如果常量名是动态的，可以使用 "),_("code",[t._v("constant()")]),t._v(" 来获取常量的值。")]),t._v(" "),_("div",{staticClass:"language-php line-numbers-mode"},[_("div",{staticClass:"highlight-lines"},[_("br"),_("br"),_("br"),_("br"),_("div",{staticClass:"highlighted"},[t._v(" ")]),_("br"),_("br")]),_("pre",{pre:!0,attrs:{class:"language-php"}},[_("code",[_("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$test")]),t._v(" "),_("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),_("span",{pre:!0,attrs:{class:"token string single-quoted-string"}},[t._v("'TEST'")]),_("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),_("span",{pre:!0,attrs:{class:"token function"}},[t._v("define")]),_("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),_("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$test")]),_("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),_("span",{pre:!0,attrs:{class:"token number"}},[t._v("123")]),_("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),_("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),_("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("echo")]),t._v(" "),_("span",{pre:!0,attrs:{class:"token constant"}},[t._v("TEST")]),_("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),_("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),t._v(" "),_("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 123")]),t._v("\n"),_("span",{pre:!0,attrs:{class:"token function"}},[t._v("print_r")]),_("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),_("span",{pre:!0,attrs:{class:"token function"}},[t._v("constant")]),_("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),_("span",{pre:!0,attrs:{class:"token string single-quoted-string"}},[t._v("'TEST'")]),_("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),_("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),_("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),_("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),t._v(" "),_("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 123")]),t._v("\n")])]),_("div",{staticClass:"line-numbers-wrapper"},[_("span",{staticClass:"line-number"},[t._v("1")]),_("br"),_("span",{staticClass:"line-number"},[t._v("2")]),_("br"),_("span",{staticClass:"line-number"},[t._v("3")]),_("br"),_("span",{staticClass:"line-number"},[t._v("4")]),_("br"),_("span",{staticClass:"line-number"},[t._v("5")]),_("br"),_("span",{staticClass:"line-number"},[t._v("6")]),_("br")])]),_("h3",{attrs:{id:"get-defined-constants"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#get-defined-constants"}},[t._v("#")]),t._v(" "),_("code",[t._v("get_defined_constants()")])]),t._v(" "),_("p",[_("code",[t._v("get_defined_constants()")]),t._v(" 可以获取所有已定义的常量列表。")]),t._v(" "),_("h3",{attrs:{id:"const"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#const"}},[t._v("#")]),t._v(" "),_("code",[t._v("const")])]),t._v(" "),_("p",[t._v("在 "),_("code",[t._v("PHP 5.3.0")]),t._v(" 后还可以使用 "),_("code",[t._v("const")]),t._v(" 关键字来定义常量。")]),t._v(" "),_("div",{staticClass:"custom-block warning"},[_("p",{staticClass:"custom-block-title"},[t._v("定义的位置")]),t._v(" "),_("p",[t._v("使用 "),_("code",[t._v("const")]),t._v(" 关键字定义常量必须要写在脚本作用域的最顶端，因为此方法是编译的时候定义的。")])]),t._v(" "),_("h2",{attrs:{id:"魔术常量"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#魔术常量"}},[t._v("#")]),t._v(" 魔术常量")]),t._v(" "),_("p",[_("code",[t._v("PHP")]),t._v(" 有八个魔术常量可以在脚本中使用。")]),t._v(" "),_("table",[_("thead",[_("tr",[_("th",[t._v("变量名")]),t._v(" "),_("th",[t._v("简介")])])]),t._v(" "),_("tbody",[_("tr",[_("td",[_("code",[t._v("__LINE__")])]),t._v(" "),_("td",[t._v("文件中的当前行号。")])]),t._v(" "),_("tr",[_("td",[_("code",[t._v("__FILE__")])]),t._v(" "),_("td",[t._v("文件的完整路径和文件名。如果用在被包含文件中，则返回被包含的文件名。自 PHP 4.0.2 起，"),_("code",[t._v("__FILE__")]),t._v(" 总是包含一个绝对路径（如果是符号连接，则是解析后的绝对路径），而在此之前的版本有时会包含一个相对路径。")])]),t._v(" "),_("tr",[_("td",[_("code",[t._v("__DIR__")])]),t._v(" "),_("td",[t._v("文件所在的目录。如果用在被包括文件中，则返回被包括的文件所在的目录。它等价于 "),_("code",[t._v("dirname(__FILE__)")]),t._v("。除非是根目录，否则目录中名不包括末尾的斜杠。（PHP 5.3.0中新增）")])]),t._v(" "),_("tr",[_("td",[_("code",[t._v("__FUNCTION__")])]),t._v(" "),_("td",[t._v("函数名称（PHP 4.3.0 新加）。自 PHP 5 起本常量返回该函数被定义时的名字（区分大小写）。在 PHP 4 中该值总是小写字母的。")])]),t._v(" "),_("tr",[_("td",[_("code",[t._v("__CLASS__")])]),t._v(" "),_("td",[t._v("类的名称（PHP 4.3.0 新加）。自 PHP 5 起本常量返回该类被定义时的名字（区分大小写）。在 PHP 4 中该值总是小写字母的。类名包括其被声明的作用区域（例如 Foo\\Bar）。注意自 PHP 5.4 起 "),_("strong",[t._v("CLASS")]),t._v(" 对 trait 也起作用。当用在 trait 方法中时，"),_("code",[t._v("__CLASS__")]),t._v(" 是调用 trait 方法的类的名字。")])]),t._v(" "),_("tr",[_("td",[_("code",[t._v("__TRAIT__")])]),t._v(" "),_("td",[_("code",[t._v("Trait")]),t._v(" 的名字（PHP 5.4.0 新加）。自 PHP 5.4 起此常量返回 "),_("code",[t._v("trait")]),t._v(" 被定义时的名字（区分大小写）。 "),_("code",[t._v("Trait")]),t._v(" 名包括其被声明的作用区域（例如 Foo\\Bar）。")])]),t._v(" "),_("tr",[_("td",[_("code",[t._v("__METHOD__")])]),t._v(" "),_("td",[t._v("类的方法名（PHP 5.0.0 新加）。返回该方法被定义时的名字（区分大小写）。")])]),t._v(" "),_("tr",[_("td",[_("code",[t._v("__NAMESPACE__")])]),t._v(" "),_("td",[t._v("当前命名空间的名称（区分大小写）。此常量是在编译时定义的（PHP 5.3.0 新增）。")])])])])])}),[],!1,null,null,null);s.default=n.exports}}]);