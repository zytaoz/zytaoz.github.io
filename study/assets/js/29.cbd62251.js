(window.webpackJsonp=window.webpackJsonp||[]).push([[29],{393:function(t,s,a){"use strict";a.r(s);var n=a(49),e=Object(n.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"运算符基础"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#运算符基础"}},[t._v("#")]),t._v(" 运算符基础")]),t._v(" "),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[t._v("什么是运算符")]),t._v(" "),a("p",[t._v("运算符是可以通过表达式来产生一个值的东西。")])]),t._v(" "),a("p",[t._v("运算符可以按照他接受几个值类分类。")]),t._v(" "),a("ul",[a("li",[t._v("一元运算符只能接受一个值，通常就是逻辑运算符或递增递减运算符。")]),t._v(" "),a("li",[t._v("二元运算符可以直接两个值，常见的加减都是二元运算符。")]),t._v(" "),a("li",[t._v("三元运算符多了一个问号")])]),t._v(" "),a("h2",{attrs:{id:"运算符的优先级"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#运算符的优先级"}},[t._v("#")]),t._v(" 运算符的优先级")]),t._v(" "),a("p",[t._v("运算符的优先级决定了两个表达式直接绑定的紧密关系。")]),t._v(" "),a("p",[t._v("必要的时候使用括号可以修改运算符的优先级。哪怕在没有必要使用括号的情况下，使用括号也可以增强脚本的可读性。")]),t._v(" "),a("p",[t._v("如果运算符的优先级相同，那么运算符的"),a("strong",[t._v("结合方向")]),t._v("决定了该如何运算。")]),t._v(" "),a("div",{staticClass:"language-php line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-php"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# - 是左联的")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# = 是右连的")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$a")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$b")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$c")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 等同于")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$a")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$b")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$c")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br")])]),a("p",[t._v("运算符的优先级详见下表。优先级由高到低排列。")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[t._v("结合方向")]),t._v(" "),a("th",[t._v("运算符")]),t._v(" "),a("th",[t._v("附加信息")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[t._v("无")]),t._v(" "),a("td",[a("code",[t._v("clone")]),t._v(" "),a("code",[t._v("new")])]),t._v(" "),a("td",[a("code",[t._v("clone")]),t._v(" 和 "),a("code",[t._v("new")])])]),t._v(" "),a("tr",[a("td",[t._v("右")]),t._v(" "),a("td",[a("code",[t._v("**")])]),t._v(" "),a("td",[t._v("算术运算符")])]),t._v(" "),a("tr",[a("td",[t._v("右")]),t._v(" "),a("td",[a("code",[t._v("++")]),t._v(" "),a("code",[t._v("--")]),t._v(" "),a("code",[t._v("~")]),t._v(" "),a("code",[t._v("(int)")]),t._v(" "),a("code",[t._v("(float)")]),t._v(" "),a("code",[t._v("(string)")]),t._v(" "),a("code",[t._v("(array)")]),t._v(" "),a("code",[t._v("(object)")]),t._v(" "),a("code",[t._v("(bool)")]),t._v(" "),a("code",[t._v("@")])]),t._v(" "),a("td",[t._v("类型、递增／递减、错误控制")])]),t._v(" "),a("tr",[a("td",[t._v("无")]),t._v(" "),a("td",[a("code",[t._v("instanceof")])]),t._v(" "),a("td",[t._v("类型")])]),t._v(" "),a("tr",[a("td",[t._v("右")]),t._v(" "),a("td",[a("code",[t._v("!")])]),t._v(" "),a("td",[t._v("逻辑运算符")])]),t._v(" "),a("tr",[a("td",[t._v("左")]),t._v(" "),a("td",[a("code",[t._v("*")]),t._v(" "),a("code",[t._v("/")]),t._v(" "),a("code",[t._v("%")])]),t._v(" "),a("td",[t._v("算术运算符")])]),t._v(" "),a("tr",[a("td",[t._v("左")]),t._v(" "),a("td",[a("code",[t._v("+")]),t._v(" "),a("code",[t._v("-")]),t._v(" "),a("code",[t._v(".")])]),t._v(" "),a("td",[t._v("算术运算符 和 字符串运算符")])]),t._v(" "),a("tr",[a("td",[t._v("左")]),t._v(" "),a("td",[a("code",[t._v("<<")]),t._v(" "),a("code",[t._v(">>")])]),t._v(" "),a("td",[t._v("位运算符")])]),t._v(" "),a("tr",[a("td",[t._v("无")]),t._v(" "),a("td",[a("code",[t._v("<")]),t._v(" "),a("code",[t._v("<=")]),t._v(" "),a("code",[t._v(">")]),t._v(" "),a("code",[t._v(">=")])]),t._v(" "),a("td",[t._v("比较运算符")])]),t._v(" "),a("tr",[a("td",[t._v("无")]),t._v(" "),a("td",[a("code",[t._v("==")]),t._v(" "),a("code",[t._v("!=")]),t._v(" "),a("code",[t._v("===")]),t._v(" "),a("code",[t._v("!==")]),t._v(" "),a("code",[t._v("<>")]),t._v(" "),a("code",[t._v("<=>")]),t._v("\t比较运算符")]),t._v(" "),a("td")]),t._v(" "),a("tr",[a("td",[t._v("左")]),t._v(" "),a("td",[a("code",[t._v("&")])]),t._v(" "),a("td",[t._v("位运算符 和 引用")])]),t._v(" "),a("tr",[a("td",[t._v("左")]),t._v(" "),a("td",[a("code",[t._v("^")])]),t._v(" "),a("td",[t._v("位运算符")])]),t._v(" "),a("tr",[a("td",[t._v("左")]),t._v(" "),a("td",[a("code",[t._v("|")])]),t._v(" "),a("td",[t._v("位运算符")])]),t._v(" "),a("tr",[a("td",[t._v("左")]),t._v(" "),a("td",[a("code",[t._v("&&")])]),t._v(" "),a("td",[t._v("逻辑运算符")])]),t._v(" "),a("tr",[a("td",[t._v("左")]),t._v(" "),a("td",[a("code",[t._v("||")])]),t._v(" "),a("td",[t._v("逻辑运算符")])]),t._v(" "),a("tr",[a("td",[t._v("右")]),t._v(" "),a("td",[a("code",[t._v("??")]),t._v(" "),a("code",[t._v("null")])]),t._v(" "),a("td",[t._v("合并运算符")])]),t._v(" "),a("tr",[a("td",[t._v("左")]),t._v(" "),a("td",[a("code",[t._v("?")]),t._v(" "),a("code",[t._v(":")])]),t._v(" "),a("td",[t._v("三元运算符")])]),t._v(" "),a("tr",[a("td",[t._v("右")]),t._v(" "),a("td",[a("code",[t._v("=")]),t._v(" "),a("code",[t._v("+=")]),t._v(" "),a("code",[t._v("-=")]),t._v(" "),a("code",[t._v("*=")]),t._v(" "),a("code",[t._v("**=")]),t._v(" "),a("code",[t._v("/=")]),t._v(" "),a("code",[t._v(".=")]),t._v(" "),a("code",[t._v("%=")]),t._v(" "),a("code",[t._v("&=")]),t._v(" "),a("code",[t._v("|=")]),t._v(" "),a("code",[t._v("^=")]),t._v(" "),a("code",[t._v("<<=")]),t._v(" "),a("code",[t._v(">>=")])]),t._v(" "),a("td",[t._v("赋值运算符")])]),t._v(" "),a("tr",[a("td",[t._v("右")]),t._v(" "),a("td",[a("code",[t._v("yield")]),t._v(" "),a("code",[t._v("from")])]),t._v(" "),a("td",[t._v("yield from")])]),t._v(" "),a("tr",[a("td",[t._v("右")]),t._v(" "),a("td",[a("code",[t._v("yield")])]),t._v(" "),a("td",[a("code",[t._v("yield")])])]),t._v(" "),a("tr",[a("td",[t._v("左")]),t._v(" "),a("td",[a("code",[t._v("and")])]),t._v(" "),a("td",[t._v("逻辑运算符")])]),t._v(" "),a("tr",[a("td",[t._v("左")]),t._v(" "),a("td",[a("code",[t._v("xor")])]),t._v(" "),a("td",[t._v("逻辑运算符")])]),t._v(" "),a("tr",[a("td",[t._v("左")]),t._v(" "),a("td",[a("code",[t._v("or")])]),t._v(" "),a("td",[t._v("逻辑运算符")])])])]),t._v(" "),a("h2",{attrs:{id:"算数运算符"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#算数运算符"}},[t._v("#")]),t._v(" 算数运算符")]),t._v(" "),a("p",[t._v("这个就是一般的加减乘除，和 "),a("code",[t._v("javascript")]),t._v(" 并没有什么区别。")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[t._v("例子")]),t._v(" "),a("th",[t._v("名称")]),t._v(" "),a("th",[t._v("结果")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[t._v("-$a")]),t._v(" "),a("td",[t._v("取反")]),t._v(" "),a("td",[t._v("$a 的负值。")])]),t._v(" "),a("tr",[a("td",[t._v("$a + $b")]),t._v(" "),a("td",[t._v("加法")]),t._v(" "),a("td",[t._v("$a 和 $b 的和。")])]),t._v(" "),a("tr",[a("td",[t._v("$a - $b")]),t._v(" "),a("td",[t._v("减法")]),t._v(" "),a("td",[t._v("$a 和 $b 的差。")])]),t._v(" "),a("tr",[a("td",[t._v("$a * $b")]),t._v(" "),a("td",[t._v("乘法")]),t._v(" "),a("td",[t._v("$a 和 $b 的积。")])]),t._v(" "),a("tr",[a("td",[t._v("$a / $b")]),t._v(" "),a("td",[t._v("除法")]),t._v(" "),a("td",[t._v("$a 除以 $b 的商。")])]),t._v(" "),a("tr",[a("td",[t._v("$a % $b")]),t._v(" "),a("td",[t._v("取模")]),t._v(" "),a("td",[t._v("$a 除以 $b 的余数。")])]),t._v(" "),a("tr",[a("td",[t._v("$a ** $b")]),t._v(" "),a("td",[t._v("求幂")]),t._v(" "),a("td",[t._v("$a 的 $b次方的值. PHP 5.6版本中引入.")])])])]),t._v(" "),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[t._v("除法运算符")]),t._v(" "),a("p",[t._v("除法运算符总是返回浮点数。只有在下列情况例外：两个操作数都是整数（或字符串转换成的整数）并且正好能整除，这时它返回一个整数。")])]),t._v(" "),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[t._v("取模运算符")]),t._v(" "),a("p",[t._v("取模运算符的操作数在运算之前都会转换成整数（除去小数部分），取模运算符 "),a("code",[t._v("%")]),t._v(" 的结果和被除数的符号（正负号）相同。")])]),t._v(" "),a("div",{staticClass:"language-php line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-php"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("echo")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("%")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 2")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("echo")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("%")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 2")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("echo")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("%")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# -2")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("echo")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("%")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# -2")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br"),a("span",{staticClass:"line-number"},[t._v("9")]),a("br"),a("span",{staticClass:"line-number"},[t._v("10")]),a("br"),a("span",{staticClass:"line-number"},[t._v("11")]),a("br")])]),a("h2",{attrs:{id:"赋值运算符"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#赋值运算符"}},[t._v("#")]),t._v(" 赋值运算符")]),t._v(" "),a("p",[t._v("基本的赋值运算符是 "),a("code",[t._v("=")]),t._v("，他其实并不是等于号，他实际上表达的意思是说把右边表达式的值赋给左边的运算数。")]),t._v(" "),a("p",[t._v("赋值运算符也是有值的，他的值就是所赋的值。根据这个特性，可以有一些小技巧。")]),t._v(" "),a("div",{staticClass:"language-php line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-php"}},[a("code",[a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$a")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$b")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("echo")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$a")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 9")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("echo")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$b")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 4")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br")])]),a("h3",{attrs:{id:"组合运算符"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#组合运算符"}},[t._v("#")]),t._v(" 组合运算符")]),t._v(" "),a("p",[t._v("除了基础的赋值运算符以外，还有适合于所有二元算数、数组集合、字符串运算符的组合运算符。")]),t._v(" "),a("div",{staticClass:"language-php line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-php"}},[a("code",[a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$a")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$a")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("echo")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$a")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 8;")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$b")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string single-quoted-string"}},[t._v("'Hello'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$b")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(".=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string single-quoted-string"}},[t._v("'There!'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("echo")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$b")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Hello THere")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br"),a("span",{staticClass:"line-number"},[t._v("9")]),a("br")])]),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[t._v("到底是引用还是复制？")]),t._v(" "),a("p",[t._v("区别于 "),a("code",[t._v("javascript")]),t._v(" 中对象和数组都是引用类型。\n"),a("br")]),t._v(" "),a("p",[t._v("在 "),a("code",[t._v("PHP")]),t._v(" 中赋值运算符是将原变量的值 "),a("strong",[t._v("拷贝")]),t._v(" 到新变量中，改变其中一个并不会印象另外一个。但是有一个例外，那就是 "),a("code",[t._v("Object")]),t._v(" ，对象这个东西是引用赋值，除非非常明确的使用了 "),a("code",[t._v("clone")]),t._v(" 关键字来进行克隆。\n"),a("br")]),t._v(" "),a("p",[t._v("而普通的变量也是可以使用 "),a("code",[t._v("&")]),t._v(" 符号来将拷贝变成引用的。"),a("RouterLink",{attrs:{to:"/server/php/basis/variables.html#引用赋值"}},[t._v("点击查看")])],1)]),t._v(" "),a("h2",{attrs:{id:"位运算符"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#位运算符"}},[t._v("#")]),t._v(" 位运算符")]),t._v(" "),a("p",[t._v("位运算符允许对整型数中指定的位进行求值和操作。")]),t._v(" "),a("p",[t._v("没看懂 🤦‍♂️。复习的时候再去看看吧。"),a("a",{attrs:{href:"https://www.php.net/manual/zh/language.operators.bitwise.php",target:"_blank",rel:"noopener noreferrer"}},[t._v("点击直达"),a("OutboundLink")],1)]),t._v(" "),a("h2",{attrs:{id:"比较运算符"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#比较运算符"}},[t._v("#")]),t._v(" 比较运算符")]),t._v(" "),a("p",[t._v("比较运算符就是把两个值放在一起比较。")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[t._v("例子")]),t._v(" "),a("th",[t._v("名称")]),t._v(" "),a("th",[t._v("结果")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[t._v("$a == $b")]),t._v(" "),a("td",[t._v("等于")]),t._v(" "),a("td",[t._v("TRUE，如果类型转换后 $a 等于 $b。")])]),t._v(" "),a("tr",[a("td",[t._v("$a === $b")]),t._v(" "),a("td",[t._v("全等")]),t._v(" "),a("td",[t._v("TRUE，如果 $a 等于 $b，并且它们的类型也相同。")])]),t._v(" "),a("tr",[a("td",[t._v("$a != $b")]),t._v(" "),a("td",[t._v("不等")]),t._v(" "),a("td",[t._v("TRUE，如果类型转换后 $a 不等于 $b。")])]),t._v(" "),a("tr",[a("td",[t._v("$a <> $b")]),t._v(" "),a("td",[t._v("不等")]),t._v(" "),a("td",[t._v("TRUE，如果类型转换后 $a 不等于 $b。")])]),t._v(" "),a("tr",[a("td",[t._v("$a !== $b")]),t._v(" "),a("td",[t._v("不全等")]),t._v(" "),a("td",[t._v("TRUE，如果 $a 不等于 $b，或者它们的类型不同。")])]),t._v(" "),a("tr",[a("td",[t._v("$a < $b")]),t._v(" "),a("td",[t._v("小与")]),t._v(" "),a("td",[t._v("TRUE，如果 $a 严格小于 $b。")])]),t._v(" "),a("tr",[a("td",[t._v("$a > $b")]),t._v(" "),a("td",[t._v("大于")]),t._v(" "),a("td",[t._v("TRUE，如果 $a 严格大于 $b。")])]),t._v(" "),a("tr",[a("td",[t._v("$a <= $b")]),t._v(" "),a("td",[t._v("小于等于")]),t._v(" "),a("td",[t._v("TRUE，如果 $a 小于或者等于 $b。")])]),t._v(" "),a("tr",[a("td",[t._v("$a >= $b")]),t._v(" "),a("td",[t._v("大于等于")]),t._v(" "),a("td",[t._v("TRUE，如果 $a 大于或者等于 $b。")])]),t._v(" "),a("tr",[a("td",[t._v("$a <=> $b")]),t._v(" "),a("td",[t._v("结合比较运算符")]),t._v(" "),a("td",[t._v("当$a小于、等于、大于than $b时 分别返回一个小于、等于、大于0的integer 值。 PHP7开始提供。")])])])]),t._v(" "),a("p",[t._v("如 "),a("code",[t._v("JavaScript")]),t._v(" 一样，如果只是简单的双等比较，那么 "),a("code",[t._v("PHP")]),t._v(" 会对值进行强制类型转换，不会比较值的类型。如果是三等的话则会比较值的类型。")]),t._v(" "),a("p",[t._v("多类型比较的规则见下表。")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[t._v("运算数 1 类型")]),t._v(" "),a("th",[t._v("运算数 2 类型")]),t._v(" "),a("th",[t._v("结果")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[a("code",[t._v("null")]),t._v(" 或 "),a("code",[t._v("string")])]),t._v(" "),a("td",[a("code",[t._v("string")])]),t._v(" "),a("td",[t._v("将 "),a("code",[t._v("NULL")]),t._v(' 转换为 ""，进行数字或词汇比较')])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("bool")]),t._v(" 或 "),a("code",[t._v("null")])]),t._v(" "),a("td",[t._v("任何其它类型")]),t._v(" "),a("td",[t._v("转换为 "),a("code",[t._v("bool")]),t._v(" "),a("code",[t._v("，FALSE")]),t._v(" < "),a("code",[t._v("TRUE")])])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("object")])]),t._v(" "),a("td",[a("code",[t._v("object")])]),t._v(" "),a("td",[t._v("内置类可以定义自己的比较，不同类不能比较，相同类和数组同样方式比较属性（PHP 4 中），PHP 5 有其自己的说明")])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("string")]),t._v(" ， "),a("code",[t._v("resource")]),t._v(" 或 "),a("code",[t._v("number")])]),t._v(" "),a("td",[a("code",[t._v("string")]),t._v(" ， "),a("code",[t._v("resource")]),t._v(" 或 "),a("code",[t._v("number")])]),t._v(" "),a("td",[t._v("将字符串和资源转换成数字，按普通数学比较")])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("array")])]),t._v(" "),a("td",[a("code",[t._v("array")])]),t._v(" "),a("td",[t._v("具有较少成员的数组较小，如果运算数 1 中的键不存在于运算数 2 中则数组无法比较，否则挨个值比较（见下例）")])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("object")])]),t._v(" "),a("td",[t._v("任何其它类型")]),t._v(" "),a("td",[a("code",[t._v("object")]),t._v(" 总是更大")])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("array")])]),t._v(" "),a("td",[t._v("任何其它类型")]),t._v(" "),a("td",[a("code",[t._v("array")]),t._v(" 总是更大")])])])]),t._v(" "),a("p",[a("strong",[t._v("不要对比浮点数")])]),t._v(" "),a("h3",{attrs:{id:"三元运算符"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#三元运算符"}},[t._v("#")]),t._v(" 三元运算符")]),t._v(" "),a("p",[t._v("还有就是三元运算符，他和 "),a("code",[t._v("JavaScript")]),t._v(" 中的是一样的。")]),t._v(" "),a("h3",{attrs:{id:"null-合并运算符"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#null-合并运算符"}},[t._v("#")]),t._v(" NULL 合并运算符")]),t._v(" "),a("p",[t._v('PHP 7 开始存在 "??" （NULL 合并）运算符。')]),t._v(" "),a("div",{staticClass:"language-php line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-php"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// NULL 合并运算符的例子")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$action")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$_POST")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token string single-quoted-string"}},[t._v("'action'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("??")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string single-quoted-string"}},[t._v("'default'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 以上例子等同于于以下 if/else 语句")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("isset")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$_POST")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token string single-quoted-string"}},[t._v("'action'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$action")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$_POST")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token string single-quoted-string"}},[t._v("'action'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$action")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string single-quoted-string"}},[t._v("'default'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br"),a("span",{staticClass:"line-number"},[t._v("9")]),a("br")])]),a("p",[t._v("当 expr1 为 NULL，表达式 (expr1) ?? (expr2) 等同于 expr2，否则为 expr1。")]),t._v(" "),a("h2",{attrs:{id:"错误控制运算符"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#错误控制运算符"}},[t._v("#")]),t._v(" 错误控制运算符")]),t._v(" "),a("p",[t._v("在任何一个 "),a("code",[t._v("PHP")]),t._v(" 的表达式前面加上一个 "),a("code",[t._v("@")]),t._v(" ，那么他将会忽略这个表达式的任何错误。")]),t._v(" "),a("div",{staticClass:"custom-block warning"},[a("p",{staticClass:"custom-block-title"},[t._v("不要滥用")]),t._v(" "),a("p",[t._v("滥用或者不小心输入进去可能会导致你根本找不到你的脚本到底错在了哪里！")])]),t._v(" "),a("h2",{attrs:{id:"执行运算符"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#执行运算符"}},[t._v("#")]),t._v(" 执行运算符")]),t._v(" "),a("p",[t._v("执行运算符就是在一对反引号中写下一段 "),a("code",[t._v("shell")]),t._v(" 命令，那么 "),a("code",[t._v("PHP")]),t._v(" 会尝试使用 "),a("code",[t._v("shell")]),t._v(" 去执行他。")]),t._v(" "),a("p",[t._v("如果已经激活了安全模式，关闭了 "),a("code",[t._v("shell_exec()")]),t._v(" 时是无效的。")]),t._v(" "),a("h2",{attrs:{id:"递增-递减运算符"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#递增-递减运算符"}},[t._v("#")]),t._v(" 递增 / 递减运算符")]),t._v(" "),a("p",[t._v("和 "),a("code",[t._v("JavaScript")]),t._v(" 中的是一样的。")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[t._v("例子")]),t._v(" "),a("th",[t._v("名称")]),t._v(" "),a("th",[t._v("效果")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[t._v("++$a")]),t._v(" "),a("td",[t._v("前加")]),t._v(" "),a("td",[t._v("$a 的值加一，然后返回 $a。")])]),t._v(" "),a("tr",[a("td",[t._v("$a++")]),t._v(" "),a("td",[t._v("后加")]),t._v(" "),a("td",[t._v("返回 $a，然后将 $a 的值加一。")])]),t._v(" "),a("tr",[a("td",[t._v("--$a")]),t._v(" "),a("td",[t._v("前减")]),t._v(" "),a("td",[t._v("$a 的值减一， 然后返回 $a。")])]),t._v(" "),a("tr",[a("td",[t._v("$a--")]),t._v(" "),a("td",[t._v("后减")]),t._v(" "),a("td",[t._v("返回 $a，然后将 $a 的值减一。")])])])]),t._v(" "),a("h2",{attrs:{id:"逻辑运算符"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#逻辑运算符"}},[t._v("#")]),t._v(" 逻辑运算符")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[t._v("例子")]),t._v(" "),a("th",[t._v("名称")]),t._v(" "),a("th",[t._v("结果")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[t._v("$a and $b")]),t._v(" "),a("td",[t._v("And（逻辑与）")]),t._v(" "),a("td",[t._v("TRUE，如果 $a 和 $b 都为 TRUE。")])]),t._v(" "),a("tr",[a("td",[t._v("$a or $b")]),t._v(" "),a("td",[t._v("Or（逻辑或）")]),t._v(" "),a("td",[t._v("TRUE，如果 $a 或 $b 任一为 TRUE。")])]),t._v(" "),a("tr",[a("td",[t._v("$a xor $b")]),t._v(" "),a("td",[t._v("Xor（逻辑异或）")]),t._v(" "),a("td",[t._v("TRUE，如果 $a 或 $b 任一为 TRUE，但不同时是。")])]),t._v(" "),a("tr",[a("td",[t._v("! $a")]),t._v(" "),a("td",[t._v("Not（逻辑非）")]),t._v(" "),a("td",[t._v("TRUE，如果 $a 不为 TRUE。")])]),t._v(" "),a("tr",[a("td",[t._v("$a && $b")]),t._v(" "),a("td",[t._v("And（逻辑与）")]),t._v(" "),a("td",[t._v("TRUE，如果 $a 和 $b 都为 TRUE。")])]),t._v(" "),a("tr",[a("td",[t._v("$a")]),t._v(" "),a("td"),t._v(" "),a("td",[t._v("$b")])])])]),t._v(" "),a("div",{staticClass:"language-php line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-php"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// foo() 根本没机会被调用，被运算符“短路”了")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$a")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token constant boolean"}},[t._v("false")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&&")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("foo")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$b")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("true")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("||")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("foo")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$c")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token constant boolean"}},[t._v("false")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("and")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("foo")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$d")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token constant boolean"}},[t._v("true")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("or")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("foo")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// "||" 比 "or" 的优先级高')]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 表达式 (false || true) 的结果被赋给 $e")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 等同于：($e = (false || true))")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$e")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword type-declaration"}},[t._v("false")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("||")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("true")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 常量 false 被赋给 $f，true 被忽略")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 等同于：(($f = false) or true)")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$f")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token constant boolean"}},[t._v("false")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("or")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token constant boolean"}},[t._v("true")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("var_dump")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$e")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$f")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# bool(true) bool(false)")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// "&&" 比 "and" 的优先级高')]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 表达式 (true && false) 的结果被赋给 $g")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 等同于：($g = (true && false))")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$g")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token constant boolean"}},[t._v("true")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&&")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token constant boolean"}},[t._v("false")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 常量 true 被赋给 $h，false 被忽略")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 等同于：(($h = true) and false)")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$h")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token constant boolean"}},[t._v("true")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("and")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token constant boolean"}},[t._v("false")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("var_dump")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$g")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$h")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# bool(false) bool(true)")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br"),a("span",{staticClass:"line-number"},[t._v("9")]),a("br"),a("span",{staticClass:"line-number"},[t._v("10")]),a("br"),a("span",{staticClass:"line-number"},[t._v("11")]),a("br"),a("span",{staticClass:"line-number"},[t._v("12")]),a("br"),a("span",{staticClass:"line-number"},[t._v("13")]),a("br"),a("span",{staticClass:"line-number"},[t._v("14")]),a("br"),a("span",{staticClass:"line-number"},[t._v("15")]),a("br"),a("span",{staticClass:"line-number"},[t._v("16")]),a("br"),a("span",{staticClass:"line-number"},[t._v("17")]),a("br"),a("span",{staticClass:"line-number"},[t._v("18")]),a("br"),a("span",{staticClass:"line-number"},[t._v("19")]),a("br"),a("span",{staticClass:"line-number"},[t._v("20")]),a("br"),a("span",{staticClass:"line-number"},[t._v("21")]),a("br"),a("span",{staticClass:"line-number"},[t._v("22")]),a("br"),a("span",{staticClass:"line-number"},[t._v("23")]),a("br"),a("span",{staticClass:"line-number"},[t._v("24")]),a("br"),a("span",{staticClass:"line-number"},[t._v("25")]),a("br"),a("span",{staticClass:"line-number"},[t._v("26")]),a("br"),a("span",{staticClass:"line-number"},[t._v("27")]),a("br"),a("span",{staticClass:"line-number"},[t._v("28")]),a("br"),a("span",{staticClass:"line-number"},[t._v("29")]),a("br"),a("span",{staticClass:"line-number"},[t._v("30")]),a("br")])]),a("h2",{attrs:{id:"字符串运算符"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#字符串运算符"}},[t._v("#")]),t._v(" 字符串运算符")]),t._v(" "),a("p",[t._v("字符串运算符有两种")]),t._v(" "),a("ul",[a("li",[a("code",[t._v(".")]),t._v(" 连接运算符，它返回其左右参数连接后的字符串。")]),t._v(" "),a("li",[a("code",[t._v(".=")]),t._v(" 连接赋值运算符，它将右边参数附加到左边的参数之后。")])]),t._v(" "),a("h2",{attrs:{id:"数组运算符"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#数组运算符"}},[t._v("#")]),t._v(" 数组运算符")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[t._v("例子")]),t._v(" "),a("th",[t._v("名称")]),t._v(" "),a("th",[t._v("结果")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[t._v("$a + $b")]),t._v(" "),a("td",[t._v("联合")]),t._v(" "),a("td",[t._v("$a 和 $b 的联合。")])]),t._v(" "),a("tr",[a("td",[t._v("$a == $b")]),t._v(" "),a("td",[t._v("相等")]),t._v(" "),a("td",[t._v("如果 $a 和 $b 具有相同的键／值对则为 TRUE。")])]),t._v(" "),a("tr",[a("td",[t._v("$a === $b")]),t._v(" "),a("td",[t._v("全等")]),t._v(" "),a("td",[t._v("如果 $a 和 $b 具有相同的键／值对并且顺序和类型都相同则为 TRUE。")])]),t._v(" "),a("tr",[a("td",[t._v("$a != $b")]),t._v(" "),a("td",[t._v("不等")]),t._v(" "),a("td",[t._v("如果 $a 不等于 $b 则为 TRUE。")])]),t._v(" "),a("tr",[a("td",[t._v("$a <> $b")]),t._v(" "),a("td",[t._v("不等")]),t._v(" "),a("td",[t._v("如果 $a 不等于 $b 则为 TRUE。")])]),t._v(" "),a("tr",[a("td",[t._v("$a !== $b")]),t._v(" "),a("td",[t._v("不全等")]),t._v(" "),a("td",[t._v("如果 $a 不全等于 $b 则为 TRUE。")])])])]),t._v(" "),a("p",[a("strong",[a("code",[t._v("+")]),t._v(" 运算符把右边的数组元素附加到左边的数组后面，两个数组中都有的键名，则只用左边数组中的，右边的被忽略。")])]),t._v(" "),a("h2",{attrs:{id:"类型运算符"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#类型运算符"}},[t._v("#")]),t._v(" 类型运算符")]),t._v(" "),a("h3",{attrs:{id:"instanceof"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#instanceof"}},[t._v("#")]),t._v(" instanceof")]),t._v(" "),a("p",[a("code",[t._v("instanceof")]),t._v(" 用于确定一个 "),a("code",[t._v("PHP")]),t._v(" 变量是否属于某一类 "),a("code",[t._v("class")]),t._v(" 的实例：")]),t._v(" "),a("div",{staticClass:"language-php line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-php"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" MyClass"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("NotMyClass")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$a")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("MyClass")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("var_dump")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$a")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("instanceof")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("MyClass")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# true")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("var_dump")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$a")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("instanceof")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("NotMyClass")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# false")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br"),a("span",{staticClass:"line-number"},[t._v("9")]),a("br")])]),a("p",[a("code",[t._v("instanceof")]),t._v(" 也可用来确定一个变量是不是继承自某一父类的子类的实例")]),t._v(" "),a("div",{staticClass:"language-php line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-php"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" ParentClass"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("MyClass")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("extends")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ParentClass")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$a")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("MyClass")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("var_dump")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$a")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("instanceof")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("MyClass")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# true")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("var_dump")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$a")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("instanceof")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ParentClass")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# true")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br"),a("span",{staticClass:"line-number"},[t._v("9")]),a("br"),a("span",{staticClass:"line-number"},[t._v("10")]),a("br")])]),a("p",[t._v("使用 "),a("code",[t._v("instanceof")]),t._v(" 检查对象不是某个类的实例")]),t._v(" "),a("div",{staticClass:"language-php line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-php"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" MyClass"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$a")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("MyClass")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("var_dump")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$a")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("instanceof")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("stdClass")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# true")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br")])]),a("p",[t._v("和他一样的还有 "),a("a",{attrs:{href:"https://www.php.net/manual/zh/function.is-a.php",target:"_blank",rel:"noopener noreferrer"}},[t._v("is_a()"),a("OutboundLink")],1),t._v(" 函数")])])}),[],!1,null,null,null);s.default=e.exports}}]);