(window.webpackJsonp=window.webpackJsonp||[]).push([[30],{384:function(t,r,a){"use strict";a.r(r);var n=a(45),e=Object(n.a)({},(function(){var t=this,r=t.$createElement,a=t._self._c||r;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"array-数组"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#array-数组"}},[t._v("#")]),t._v(" Array 数组")]),t._v(" "),a("p",[a("code",[t._v("PHP")]),t._v(" 数组其实是个有序的映射。映射是一种把 "),a("code",[t._v("values")]),t._v(" 关联到 "),a("code",[t._v("keys")]),t._v(" 上的类型。此类型在很多方面做了优化，因此可以把它当成真正的数组，或列表（向量），散列表（是映射的一种实现），字典，集合，栈，队列以及更多可能性。由于数组元素的值也可以是另一个数组，树形结构和多维数组也是允许的。")]),t._v(" "),a("h2",{attrs:{id:"语法"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#语法"}},[t._v("#")]),t._v(" 语法")]),t._v(" "),a("p",[t._v("可以使用 "),a("code",[t._v("array()")]),t._v(" 来新建一个数组，自 "),a("code",[t._v("5.4")]),t._v(" 版本开始可以直接使用 "),a("code",[t._v("[]")]),t._v(" 来定义数组。")]),t._v(" "),a("div",{staticClass:"language-php extra-class"},[a("pre",{pre:!0,attrs:{class:"language-php"}},[a("code",[a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$arr")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("array")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string single-quoted-string"}},[t._v("'aaa'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token string single-quoted-string"}},[t._v("'x'")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string single-quoted-string"}},[t._v("'bbb'")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("p",[t._v("数组的长度可以是任意长度，"),a("code",[t._v("key")]),t._v(" 可以是 "),a("code",[t._v("int")]),t._v(" 或者 "),a("code",[t._v("string")]),t._v("，"),a("code",[t._v("values")]),t._v(" 可以是任何类型的值。他们是使用逗号分隔的，最后一个数组单元之后的逗号可以省略，特别是对单行的数组。如果是多行数组一般最后一个逗号建议保留，因为可以比较方便的添加新的数组单元。")]),t._v(" "),a("h3",{attrs:{id:"键名规则"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#键名规则"}},[t._v("#")]),t._v(" 键名规则")]),t._v(" "),a("p",[a("strong",[t._v("数组的"),a("code",[t._v("key")]),t._v("会有强制类型转换")])]),t._v(" "),a("ul",[a("li",[t._v("包含有合法整型的字符串会被转换为整型。例如键名字符串 "),a("code",[t._v("'8'")]),t._v(" 会被转换为整型 "),a("code",[t._v("8")]),t._v("。但是 "),a("code",[t._v("'08'")]),t._v(" 不会被转换，因为他不是一个合法的十进制数值。")]),t._v(" "),a("li",[t._v("浮点数也会被转换成整型，这意味着后面的小数点会被省略。")]),t._v(" "),a("li",[t._v("布尔值也会被转换为整型，"),a("code",[t._v("true")]),t._v(" 会被转换成 "),a("code",[t._v("1")]),t._v("，"),a("code",[t._v("false")]),t._v(" 会被转换成 "),a("code",[t._v("0")]),t._v("。")]),t._v(" "),a("li",[a("code",[t._v("null")]),t._v(" 会被转换成空字符串。")]),t._v(" "),a("li",[t._v("数组和对象不能作为键名，否则会报错。")])]),t._v(" "),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[t._v("键名覆盖")]),t._v(" "),a("p",[t._v("如果你在一个数组中使用了同样的键名，哪怕是看起来不一样，但是强制类型转换后变成一样的了，那么他也会被覆盖，只留下最后一个。")])]),t._v(" "),a("div",{staticClass:"language-php extra-class"},[a("pre",{pre:!0,attrs:{class:"language-php"}},[a("code",[a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$arr")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("array")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string single-quoted-string"}},[t._v("'a'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token string single-quoted-string"}},[t._v("'1'")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string single-quoted-string"}},[t._v("'b'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1.5")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string single-quoted-string"}},[t._v("'c'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token constant boolean"}},[t._v("true")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string single-quoted-string"}},[t._v("'d'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("var_dump")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$arr")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),t._v(" \n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('/*\n  array(1){\n    [1] => string(1) "d"\n  };\n*/')]),t._v("\n")])])]),a("p",[t._v("这个例子中的所有键名都被强制转换成 "),a("code",[t._v("1")]),t._v(" 了，所以只留下最后一个。\n"),a("br")]),t._v(" "),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[t._v("空键名")]),t._v(" "),a("p",[t._v("如果给出的值没有键名，则取当前最大的整数索引值，而新的键名则是当前最大索引值加一。如果指定的键名已经有了值，则该值会被覆盖。")])]),t._v(" "),a("p",[a("strong",[t._v("没有键名")])]),t._v(" "),a("div",{staticClass:"language-php extra-class"},[a("pre",{pre:!0,attrs:{class:"language-php"}},[a("code",[a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$arr")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("array")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string single-quoted-string"}},[t._v("'a'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string single-quoted-string"}},[t._v("'b'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string single-quoted-string"}},[t._v("'c'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string single-quoted-string"}},[t._v("'d'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("var_dump")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$arr")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),t._v(" \n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('/*\n  array(3){\n    [0] => String(1) "a"\n    [1] => String(1) "b"\n    [2] => String(1) "c"\n    [3] => String(1) "d"\n  }\n*/')]),t._v("\n")])])]),a("p",[a("strong",[t._v("指定某一个键名")])]),t._v(" "),a("div",{staticClass:"language-php extra-class"},[a("pre",{pre:!0,attrs:{class:"language-php"}},[a("code",[a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$arr")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("array")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token string single-quoted-string"}},[t._v("'a'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token string single-quoted-string"}},[t._v("'b'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("8")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string single-quoted-string"}},[t._v("'c'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token string single-quoted-string"}},[t._v("'d'")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("var_dump")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$arr")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('/*\narray(4) { \n  [0]=> string(1) "a" \n  [1]=> string(1) "b" \n  [8]=> string(1) "c" \n  [9]=> string(1) "d" \n}\n最后一个键名是9，因为之前最大的整数键名是8\n*/')]),t._v("\n")])])]),a("h3",{attrs:{id:"用方括号语法访问数组单元"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#用方括号语法访问数组单元"}},[t._v("#")]),t._v(" 用方括号语法访问数组单元")]),t._v(" "),a("p",[t._v("数组的值可以使用 "),a("code",[t._v("array[key]")]),t._v(" 语法来访问。")]),t._v(" "),a("div",{staticClass:"language-php extra-class"},[a("pre",{pre:!0,attrs:{class:"language-php"}},[a("code",[a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$array")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("array")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token string double-quoted-string"}},[t._v('"foo"')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string double-quoted-string"}},[t._v('"bar"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("42")]),t._v("    "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("24")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token string double-quoted-string"}},[t._v('"multi"')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("array")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n         "),a("span",{pre:!0,attrs:{class:"token string double-quoted-string"}},[t._v('"dimensional"')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("array")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n             "),a("span",{pre:!0,attrs:{class:"token string double-quoted-string"}},[t._v('"array"')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string double-quoted-string"}},[t._v('"foo"')]),t._v("\n         "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("var_dump")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$array")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token string double-quoted-string"}},[t._v('"foo"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("var_dump")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$array")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("42")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("var_dump")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$array")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token string double-quoted-string"}},[t._v('"multi"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token string double-quoted-string"}},[t._v('"dimensional"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token string double-quoted-string"}},[t._v('"array"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),t._v(" \n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('/*\nstring(3) "bar"\nint(24)\nstring(3) "foo"\n*/')]),t._v("\n")])])]),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[t._v("花括号的使用")]),t._v(" "),a("p",[t._v("方括号和花括号可以互换使用来访问数组单元（例如 "),a("code",[t._v("$array[42]")]),t._v(" 和 "),a("code",[t._v("$array{42}")]),t._v(" 在上例中效果相同）。")])]),t._v(" "),a("p",[a("strong",[t._v("数组解引用")])]),t._v(" "),a("ul",[a("li",[t._v("自 "),a("code",[t._v("5.4")]),t._v(" 开始可以对方法或者对象的结果进行数组解引用。")]),t._v(" "),a("li",[t._v("自 "),a("code",[t._v("5.5")]),t._v(" 开始可以对一个数组原型进行数组解引用。")])]),t._v(" "),a("div",{staticClass:"language-php extra-class"},[a("pre",{pre:!0,attrs:{class:"language-php"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("testArr")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("array")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("var_dump")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("testArr")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# int(1)")]),t._v("\n")])])]),a("h3",{attrs:{id:"用方括号的语法新建-修改"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#用方括号的语法新建-修改"}},[t._v("#")]),t._v(" 用方括号的语法新建／修改")]),t._v(" "),a("p",[t._v("使用方括号 "),a("code",[t._v("[]")]),t._v(" 指定键名，可以修改或新建（不推荐这种新建方式）一个已有数组。方括号也可以为空，为空的效果就和没有键名是一样的，会取最大整数的键名加一。")]),t._v(" "),a("div",{staticClass:"language-php extra-class"},[a("pre",{pre:!0,attrs:{class:"language-php"}},[a("code",[a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$arr")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("array")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string single-quoted-string"}},[t._v("'a'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("12")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string single-quoted-string"}},[t._v("'b'")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$arr")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("6")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string single-quoted-string"}},[t._v("'xx'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$arr")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string single-quoted-string"}},[t._v("'ccc'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),t._v(" \n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('/*\narray(4) { \n  [5]=> string(1) "a" \n  [12]=> string(1) "b" \n  [6]=> string(2) "xx" \n  [13]=> string(3) "ccc" \n}\n*/')]),t._v("\n")])])]),a("div",{staticClass:"custom-block warning"},[a("p",{staticClass:"custom-block-title"},[t._v("眼见不一定为实")]),t._v(" "),a("p",[t._v("注意这里使用的最大整数的键名不一定就存在于当前的数组中，他可能是之前就存在过，但是现在被删掉了。")])]),t._v(" "),a("div",{staticClass:"language-php extra-class"},[a("pre",{pre:!0,attrs:{class:"language-php"}},[a("code",[a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$arr")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("array")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("var_dump")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$arr")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),t._v(" \n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/*\narray(4) { \n  [0]=> int(1) \n  [1]=> int(2) \n  [2]=> int(3) \n  [3]=> int(4) \n}\n*/")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("foreach")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$arr")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("as")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$key")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$value")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("unset")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$arr")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$Key")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("var_dump")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$arr")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# array(0) {}")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$array")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("var_dump")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$arr")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),t._v(" \n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/*\n### 这里之前的键名并没有被清空\narray(1) { \n  [4]=> int(5) \n}\n*/")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 使用 array_values() 函数重新索引")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$array")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("array_values")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$array")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$array")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("7")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("var_dump")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$array")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/*\narray(1) { \n  [1]=> int(5) \n  [1]=> int(7) \n}\n*/")]),t._v("\n")])])]),a("h2",{attrs:{id:"实用函数"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#实用函数"}},[t._v("#")]),t._v(" 实用函数")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[t._v("函数名")]),t._v(" "),a("th",[t._v("简介")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[a("a",{attrs:{href:"https://www.php.net/manual/zh/function.array_change_key_case.php",target:"_blank",rel:"noopener noreferrer"}},[t._v("array_change_key_case"),a("OutboundLink")],1)]),t._v(" "),a("td",[t._v("将数组中的所有键名修改为全大写或小写")])]),t._v(" "),a("tr",[a("td",[t._v("​"),a("a",{attrs:{href:"https://www.php.net/manual/zh/function.array-chunk.php",target:"_blank",rel:"noopener noreferrer"}},[t._v("array_chunk"),a("OutboundLink")],1)]),t._v(" "),a("td",[t._v("将一个数组分割成多个")])]),t._v(" "),a("tr",[a("td",[t._v("​"),a("a",{attrs:{href:"https://www.php.net/manual/zh/function.array-column.php",target:"_blank",rel:"noopener noreferrer"}},[t._v("array_column"),a("OutboundLink")],1)]),t._v(" "),a("td",[t._v("返回数组中指定的一列")])]),t._v(" "),a("tr",[a("td",[t._v("​"),a("a",{attrs:{href:"https://www.php.net/manual/zh/function.array-combine.php",target:"_blank",rel:"noopener noreferrer"}},[t._v("array_combine"),a("OutboundLink")],1)]),t._v(" "),a("td",[t._v("创建一个数组，用一个数组的值作为其键名，另一个数组的值作为其值")])]),t._v(" "),a("tr",[a("td",[t._v("​"),a("a",{attrs:{href:"https://www.php.net/manual/zh/function.array-count-values.php",target:"_blank",rel:"noopener noreferrer"}},[t._v("array_count_values"),a("OutboundLink")],1)]),t._v(" "),a("td",[t._v("统计数组中所有的值")])]),t._v(" "),a("tr",[a("td",[t._v("​"),a("a",{attrs:{href:"https://www.php.net/manual/zh/function.array-diff-assoc.php",target:"_blank",rel:"noopener noreferrer"}},[t._v("array_diff_assoc"),a("OutboundLink")],1)]),t._v(" "),a("td",[t._v("带索引检查计算数组的差集")])]),t._v(" "),a("tr",[a("td",[t._v("​"),a("a",{attrs:{href:"https://www.php.net/manual/zh/function.array-diff-key.php",target:"_blank",rel:"noopener noreferrer"}},[t._v("array_diff_key"),a("OutboundLink")],1)]),t._v(" "),a("td",[t._v("使用键名比较计算数组的差集")])]),t._v(" "),a("tr",[a("td",[t._v("​"),a("a",{attrs:{href:"https://www.php.net/manual/zh/function.array-diff-uassoc.php",target:"_blank",rel:"noopener noreferrer"}},[t._v("array_diff_uassoc"),a("OutboundLink")],1)]),t._v(" "),a("td",[t._v("用用户提供的回调函数做索引检查来计算数组的差集")])]),t._v(" "),a("tr",[a("td",[t._v("​"),a("a",{attrs:{href:"https://www.php.net/manual/zh/function.array-diff-ukey.php",target:"_blank",rel:"noopener noreferrer"}},[t._v("array_diff_ukey"),a("OutboundLink")],1)]),t._v(" "),a("td",[t._v("用回调函数对键名比较计算数组的差集")])]),t._v(" "),a("tr",[a("td",[t._v("​"),a("a",{attrs:{href:"https://www.php.net/manual/zh/function.array-diff.php",target:"_blank",rel:"noopener noreferrer"}},[t._v("array_diff"),a("OutboundLink")],1)]),t._v(" "),a("td",[t._v("计算数组的差集")])]),t._v(" "),a("tr",[a("td",[t._v("​"),a("a",{attrs:{href:"https://www.php.net/manual/zh/function.array-fill-keys.php",target:"_blank",rel:"noopener noreferrer"}},[t._v("array_fill_keys"),a("OutboundLink")],1)]),t._v(" "),a("td",[t._v("使用指定的键和值填充数组")])]),t._v(" "),a("tr",[a("td",[t._v("​"),a("a",{attrs:{href:"https://www.php.net/manual/zh/function.array-fill.php",target:"_blank",rel:"noopener noreferrer"}},[t._v("array_fill"),a("OutboundLink")],1)]),t._v(" "),a("td",[t._v("用给定的值填充数组")])]),t._v(" "),a("tr",[a("td",[t._v("​"),a("a",{attrs:{href:"https://www.php.net/manual/zh/function.array-filter.php",target:"_blank",rel:"noopener noreferrer"}},[t._v("array_filter"),a("OutboundLink")],1)]),t._v(" "),a("td",[t._v("用回调函数过滤数组中的单元")])]),t._v(" "),a("tr",[a("td",[t._v("​"),a("a",{attrs:{href:"https://www.php.net/manual/zh/function.array-flip.php",target:"_blank",rel:"noopener noreferrer"}},[t._v("array_flip"),a("OutboundLink")],1)]),t._v(" "),a("td",[t._v("交换数组中的键和值")])]),t._v(" "),a("tr",[a("td",[t._v("​"),a("a",{attrs:{href:"https://www.php.net/manual/zh/function.array-intersect-assoc.php",target:"_blank",rel:"noopener noreferrer"}},[t._v("array_intersect_assoc"),a("OutboundLink")],1)]),t._v(" "),a("td",[t._v("带索引检查计算数组的交集")])]),t._v(" "),a("tr",[a("td",[t._v("​"),a("a",{attrs:{href:"https://www.php.net/manual/zh/function.array-intersect-key.php",target:"_blank",rel:"noopener noreferrer"}},[t._v("array_intersect_key"),a("OutboundLink")],1)]),t._v(" "),a("td",[t._v("使用键名比较计算数组的交集")])]),t._v(" "),a("tr",[a("td",[t._v("​"),a("a",{attrs:{href:"https://www.php.net/manual/zh/function.array-intersect-uassoc.php",target:"_blank",rel:"noopener noreferrer"}},[t._v("array_intersect_uassoc"),a("OutboundLink")],1)]),t._v(" "),a("td",[t._v("带索引检查计算数组的交集，用回调函数比较索引")])]),t._v(" "),a("tr",[a("td",[t._v("​"),a("a",{attrs:{href:"https://www.php.net/manual/zh/function.array-intersect-ukey.php",target:"_blank",rel:"noopener noreferrer"}},[t._v("array_intersect_ukey"),a("OutboundLink")],1)]),t._v(" "),a("td",[t._v("用回调函数比较键名来计算数组的交集")])]),t._v(" "),a("tr",[a("td",[t._v("​"),a("a",{attrs:{href:"https://www.php.net/manual/zh/function.array-intersect.php",target:"_blank",rel:"noopener noreferrer"}},[t._v("array_intersect"),a("OutboundLink")],1)]),t._v(" "),a("td",[t._v("计算数组的交集")])]),t._v(" "),a("tr",[a("td",[t._v("​"),a("a",{attrs:{href:"https://www.php.net/manual/zh/function.array-key-exists.php",target:"_blank",rel:"noopener noreferrer"}},[t._v("array_key_exists"),a("OutboundLink")],1)]),t._v(" "),a("td",[t._v("检查数组里是否有指定的键名或索引")])]),t._v(" "),a("tr",[a("td",[t._v("​"),a("a",{attrs:{href:"https://www.php.net/manual/zh/function.array-key-first.php",target:"_blank",rel:"noopener noreferrer"}},[t._v("array_key_first"),a("OutboundLink")],1)]),t._v(" "),a("td",[t._v("Gets the first key of an array")])]),t._v(" "),a("tr",[a("td",[t._v("​"),a("a",{attrs:{href:"https://www.php.net/manual/zh/function.array-key-last.php",target:"_blank",rel:"noopener noreferrer"}},[t._v("array_key_last"),a("OutboundLink")],1)]),t._v(" "),a("td",[t._v("Gets the last key of an array")])]),t._v(" "),a("tr",[a("td",[t._v("​"),a("a",{attrs:{href:"https://www.php.net/manual/zh/function.array-keys.php",target:"_blank",rel:"noopener noreferrer"}},[t._v("array_keys"),a("OutboundLink")],1)]),t._v(" "),a("td",[t._v("返回数组中部分的或所有的键名")])]),t._v(" "),a("tr",[a("td",[t._v("​"),a("a",{attrs:{href:"https://www.php.net/manual/zh/function.array-map.php",target:"_blank",rel:"noopener noreferrer"}},[t._v("array_map"),a("OutboundLink")],1)]),t._v(" "),a("td",[t._v("为数组的每个元素应用回调函数")])]),t._v(" "),a("tr",[a("td",[t._v("​"),a("a",{attrs:{href:"https://www.php.net/manual/zh/function.array-merge-recursive.php",target:"_blank",rel:"noopener noreferrer"}},[t._v("array_merge_recursive"),a("OutboundLink")],1)]),t._v(" "),a("td",[t._v("递归地合并一个或多个数组")])]),t._v(" "),a("tr",[a("td",[t._v("​"),a("a",{attrs:{href:"https://www.php.net/manual/zh/function.array-merge.php",target:"_blank",rel:"noopener noreferrer"}},[t._v("array_merge"),a("OutboundLink")],1)]),t._v(" "),a("td",[t._v("合并一个或多个数组")])]),t._v(" "),a("tr",[a("td",[t._v("​"),a("a",{attrs:{href:"https://www.php.net/manual/zh/function.array-multisort.php",target:"_blank",rel:"noopener noreferrer"}},[t._v("array_multisort"),a("OutboundLink")],1)]),t._v(" "),a("td",[t._v("对多个数组或多维数组进行排序")])]),t._v(" "),a("tr",[a("td",[t._v("​"),a("a",{attrs:{href:"https://www.php.net/manual/zh/function.array-pad.php",target:"_blank",rel:"noopener noreferrer"}},[t._v("array_pad"),a("OutboundLink")],1)]),t._v(" "),a("td",[t._v("以指定长度将一个值填充进数组")])]),t._v(" "),a("tr",[a("td",[t._v("​"),a("a",{attrs:{href:"https://www.php.net/manual/zh/function.array-pop.php",target:"_blank",rel:"noopener noreferrer"}},[t._v("array_pop"),a("OutboundLink")],1)]),t._v(" "),a("td",[t._v("弹出数组最后一个单元（出栈）")])]),t._v(" "),a("tr",[a("td",[t._v("​"),a("a",{attrs:{href:"https://www.php.net/manual/zh/function.array-product.php",target:"_blank",rel:"noopener noreferrer"}},[t._v("array_product"),a("OutboundLink")],1)]),t._v(" "),a("td",[t._v("计算数组中所有值的乘积")])]),t._v(" "),a("tr",[a("td",[t._v("​"),a("a",{attrs:{href:"https://www.php.net/manual/zh/function.array-push.php",target:"_blank",rel:"noopener noreferrer"}},[t._v("array_push"),a("OutboundLink")],1)]),t._v(" "),a("td",[t._v("将一个或多个单元压入数组的末尾（入栈）")])]),t._v(" "),a("tr",[a("td",[t._v("​"),a("a",{attrs:{href:"https://www.php.net/manual/zh/function.array-rand.php",target:"_blank",rel:"noopener noreferrer"}},[t._v("array_rand"),a("OutboundLink")],1)]),t._v(" "),a("td",[t._v("从数组中随机取出一个或多个单元")])]),t._v(" "),a("tr",[a("td",[t._v("​"),a("a",{attrs:{href:"https://www.php.net/manual/zh/function.array-reduce.php",target:"_blank",rel:"noopener noreferrer"}},[t._v("array_reduce"),a("OutboundLink")],1)]),t._v(" "),a("td",[t._v("用回调函数迭代地将数组简化为单一的值")])]),t._v(" "),a("tr",[a("td",[t._v("​"),a("a",{attrs:{href:"https://www.php.net/manual/zh/function.array-replace-recursive.php",target:"_blank",rel:"noopener noreferrer"}},[t._v("array_replace_recursive"),a("OutboundLink")],1)]),t._v(" "),a("td",[t._v("使用传递的数组递归替换第一个数组的元素")])]),t._v(" "),a("tr",[a("td",[t._v("​"),a("a",{attrs:{href:"https://www.php.net/manual/zh/function.array-replace.php",target:"_blank",rel:"noopener noreferrer"}},[t._v("array_replace"),a("OutboundLink")],1)]),t._v(" "),a("td",[t._v("使用传递的数组替换第一个数组的元素")])]),t._v(" "),a("tr",[a("td",[t._v("​"),a("a",{attrs:{href:"https://www.php.net/manual/zh/function.array-reverse.php",target:"_blank",rel:"noopener noreferrer"}},[t._v("array_reverse"),a("OutboundLink")],1)]),t._v(" "),a("td",[t._v("返回单元顺序相反的数组")])]),t._v(" "),a("tr",[a("td",[t._v("​"),a("a",{attrs:{href:"https://www.php.net/manual/zh/function.array-search.php",target:"_blank",rel:"noopener noreferrer"}},[t._v("array_search"),a("OutboundLink")],1)]),t._v(" "),a("td",[t._v("在数组中搜索给定的值，如果成功则返回首个相应的键名")])]),t._v(" "),a("tr",[a("td",[t._v("​"),a("a",{attrs:{href:"https://www.php.net/manual/zh/function.array-shift.php",target:"_blank",rel:"noopener noreferrer"}},[t._v("array_shift"),a("OutboundLink")],1)]),t._v(" "),a("td",[t._v("将数组开头的单元移出数组")])]),t._v(" "),a("tr",[a("td",[t._v("​"),a("a",{attrs:{href:"https://www.php.net/manual/zh/function.array-slice.php",target:"_blank",rel:"noopener noreferrer"}},[t._v("array_slice"),a("OutboundLink")],1)]),t._v(" "),a("td",[t._v("从数组中取出一段")])]),t._v(" "),a("tr",[a("td",[t._v("​"),a("a",{attrs:{href:"https://www.php.net/manual/zh/function.array-splice.php",target:"_blank",rel:"noopener noreferrer"}},[t._v("array_splice"),a("OutboundLink")],1)]),t._v(" "),a("td",[t._v("去掉数组中的某一部分并用其它值取代")])]),t._v(" "),a("tr",[a("td",[t._v("​"),a("a",{attrs:{href:"https://www.php.net/manual/zh/function.array-sum.php",target:"_blank",rel:"noopener noreferrer"}},[t._v("array_sum"),a("OutboundLink")],1)]),t._v(" "),a("td",[t._v("对数组中所有值求和")])]),t._v(" "),a("tr",[a("td",[t._v("​"),a("a",{attrs:{href:"https://www.php.net/manual/zh/function.array-udiff-assoc.php",target:"_blank",rel:"noopener noreferrer"}},[t._v("array_udiff_assoc"),a("OutboundLink")],1)]),t._v(" "),a("td",[t._v("带索引检查计算数组的差集，用回调函数比较数据")])]),t._v(" "),a("tr",[a("td",[t._v("​"),a("a",{attrs:{href:"https://www.php.net/manual/zh/function.array-udiff-uassoc.php",target:"_blank",rel:"noopener noreferrer"}},[t._v("array_udiff_uassoc"),a("OutboundLink")],1)]),t._v(" "),a("td",[t._v("带索引检查计算数组的差集，用回调函数比较数据和索引")])]),t._v(" "),a("tr",[a("td",[t._v("​"),a("a",{attrs:{href:"https://www.php.net/manual/zh/function.array-udiff.php",target:"_blank",rel:"noopener noreferrer"}},[t._v("array_udiff"),a("OutboundLink")],1)]),t._v(" "),a("td",[t._v("用回调函数比较数据来计算数组的差集")])]),t._v(" "),a("tr",[a("td",[t._v("​"),a("a",{attrs:{href:"https://www.php.net/manual/zh/function.array-uintersect-assoc.php",target:"_blank",rel:"noopener noreferrer"}},[t._v("array_uintersect_assoc"),a("OutboundLink")],1)]),t._v(" "),a("td",[t._v("带索引检查计算数组的交集，用回调函数比较数据")])]),t._v(" "),a("tr",[a("td",[t._v("​"),a("a",{attrs:{href:"https://www.php.net/manual/zh/function.array-uintersect-uassoc.php",target:"_blank",rel:"noopener noreferrer"}},[t._v("array_uintersect_uassoc"),a("OutboundLink")],1)]),t._v(" "),a("td",[t._v("带索引检查计算数组的交集，用单独的回调函数比较数据和索引")])]),t._v(" "),a("tr",[a("td",[t._v("​"),a("a",{attrs:{href:"https://www.php.net/manual/zh/function.array-uintersect.php",target:"_blank",rel:"noopener noreferrer"}},[t._v("array_uintersect"),a("OutboundLink")],1)]),t._v(" "),a("td",[t._v("计算数组的交集，用回调函数比较数据")])]),t._v(" "),a("tr",[a("td",[t._v("​"),a("a",{attrs:{href:"https://www.php.net/manual/zh/function.array-unique.php",target:"_blank",rel:"noopener noreferrer"}},[t._v("array_unique"),a("OutboundLink")],1)]),t._v(" "),a("td",[t._v("移除数组中重复的值")])]),t._v(" "),a("tr",[a("td",[t._v("​"),a("a",{attrs:{href:"https://www.php.net/manual/zh/function.array-unshift.php",target:"_blank",rel:"noopener noreferrer"}},[t._v("array_unshift"),a("OutboundLink")],1)]),t._v(" "),a("td",[t._v("在数组开头插入一个或多个单元")])]),t._v(" "),a("tr",[a("td",[t._v("​"),a("a",{attrs:{href:"https://www.php.net/manual/zh/function.array-values.php",target:"_blank",rel:"noopener noreferrer"}},[t._v("array_values"),a("OutboundLink")],1)]),t._v(" "),a("td",[t._v("返回数组中所有的值")])]),t._v(" "),a("tr",[a("td",[t._v("​"),a("a",{attrs:{href:"https://www.php.net/manual/zh/function.array-walk-recursive.php",target:"_blank",rel:"noopener noreferrer"}},[t._v("array_walk_recursive"),a("OutboundLink")],1)]),t._v(" "),a("td",[t._v("对数组中的每个成员递归地应用用户函数")])]),t._v(" "),a("tr",[a("td",[t._v("​"),a("a",{attrs:{href:"https://www.php.net/manual/zh/function.array-walk.php",target:"_blank",rel:"noopener noreferrer"}},[t._v("array_walk"),a("OutboundLink")],1)]),t._v(" "),a("td",[t._v("使用用户自定义函数对数组中的每个元素做回调处理")])]),t._v(" "),a("tr",[a("td",[t._v("​"),a("a",{attrs:{href:"https://www.php.net/manual/zh/function.array.php",target:"_blank",rel:"noopener noreferrer"}},[t._v("array"),a("OutboundLink")],1)]),t._v(" "),a("td",[t._v("新建一个数组")])]),t._v(" "),a("tr",[a("td",[t._v("​"),a("a",{attrs:{href:"https://www.php.net/manual/zh/function.arsort.php",target:"_blank",rel:"noopener noreferrer"}},[t._v("arsort"),a("OutboundLink")],1)]),t._v(" "),a("td",[t._v("对数组进行逆向排序并保持索引关系")])]),t._v(" "),a("tr",[a("td",[t._v("​"),a("a",{attrs:{href:"https://www.php.net/manual/zh/function.asort.php",target:"_blank",rel:"noopener noreferrer"}},[t._v("asort"),a("OutboundLink")],1)]),t._v(" "),a("td",[t._v("对数组进行排序并保持索引关系")])]),t._v(" "),a("tr",[a("td",[t._v("​"),a("a",{attrs:{href:"https://www.php.net/manual/zh/function.compact.php",target:"_blank",rel:"noopener noreferrer"}},[t._v("compact"),a("OutboundLink")],1)]),t._v(" "),a("td",[t._v("建立一个数组，包括变量名和它们的值")])]),t._v(" "),a("tr",[a("td",[t._v("​"),a("a",{attrs:{href:"https://www.php.net/manual/zh/function.count.php",target:"_blank",rel:"noopener noreferrer"}},[t._v("count"),a("OutboundLink")],1)]),t._v(" "),a("td",[t._v("计算数组中的单元数目，或对象中的属性个数")])]),t._v(" "),a("tr",[a("td",[t._v("​"),a("a",{attrs:{href:"https://www.php.net/manual/zh/function.current.php",target:"_blank",rel:"noopener noreferrer"}},[t._v("current"),a("OutboundLink")],1)]),t._v(" "),a("td",[t._v("返回数组中的当前单元")])]),t._v(" "),a("tr",[a("td",[t._v("​"),a("a",{attrs:{href:"https://www.php.net/manual/zh/function.each.php",target:"_blank",rel:"noopener noreferrer"}},[t._v("each"),a("OutboundLink")],1)]),t._v(" "),a("td",[t._v("返回数组中当前的键／值对并将数组指针向前移动一步")])]),t._v(" "),a("tr",[a("td",[t._v("​"),a("a",{attrs:{href:"https://www.php.net/manual/zh/function.end.php",target:"_blank",rel:"noopener noreferrer"}},[t._v("end"),a("OutboundLink")],1)]),t._v(" "),a("td",[t._v("将数组的内部指针指向最后一个单元")])]),t._v(" "),a("tr",[a("td",[t._v("​"),a("a",{attrs:{href:"https://www.php.net/manual/zh/function.extract.php",target:"_blank",rel:"noopener noreferrer"}},[t._v("extract"),a("OutboundLink")],1)]),t._v(" "),a("td",[t._v("从数组中将变量导入到当前的符号表")])]),t._v(" "),a("tr",[a("td",[t._v("​"),a("a",{attrs:{href:"https://www.php.net/manual/zh/function.in-array.php",target:"_blank",rel:"noopener noreferrer"}},[t._v("in_array"),a("OutboundLink")],1)]),t._v(" "),a("td",[t._v("检查数组中是否存在某个值")])]),t._v(" "),a("tr",[a("td",[t._v("​"),a("a",{attrs:{href:"https://www.php.net/manual/zh/function.key-exists.php",target:"_blank",rel:"noopener noreferrer"}},[t._v("key_exists"),a("OutboundLink")],1)]),t._v(" "),a("td",[t._v("别名 array_key_exists")])]),t._v(" "),a("tr",[a("td",[t._v("​"),a("a",{attrs:{href:"https://www.php.net/manual/zh/function.key.php",target:"_blank",rel:"noopener noreferrer"}},[t._v("key"),a("OutboundLink")],1)]),t._v(" "),a("td",[t._v("从关联数组中取得键名")])]),t._v(" "),a("tr",[a("td",[t._v("​"),a("a",{attrs:{href:"https://www.php.net/manual/zh/function.krsort.php",target:"_blank",rel:"noopener noreferrer"}},[t._v("krsort"),a("OutboundLink")],1)]),t._v(" "),a("td",[t._v("对数组按照键名逆向排序")])]),t._v(" "),a("tr",[a("td",[t._v("​"),a("a",{attrs:{href:"https://www.php.net/manual/zh/function.ksort.php",target:"_blank",rel:"noopener noreferrer"}},[t._v("ksort"),a("OutboundLink")],1)]),t._v(" "),a("td",[t._v("对数组按照键名排序")])]),t._v(" "),a("tr",[a("td",[t._v("​"),a("a",{attrs:{href:"https://www.php.net/manual/zh/function.list.php",target:"_blank",rel:"noopener noreferrer"}},[t._v("list"),a("OutboundLink")],1)]),t._v(" "),a("td",[t._v("把数组中的值赋给一组变量")])]),t._v(" "),a("tr",[a("td",[t._v("​"),a("a",{attrs:{href:"https://www.php.net/manual/zh/function.natcasesort.php",target:"_blank",rel:"noopener noreferrer"}},[t._v("natcasesort"),a("OutboundLink")],1)]),t._v(" "),a("td",[t._v("用“自然排序”算法对数组进行不区分大小写字母的排序")])]),t._v(" "),a("tr",[a("td",[t._v("​"),a("a",{attrs:{href:"https://www.php.net/manual/zh/function.natsort.php",target:"_blank",rel:"noopener noreferrer"}},[t._v("natsort"),a("OutboundLink")],1)]),t._v(" "),a("td",[t._v("用“自然排序”算法对数组排序")])]),t._v(" "),a("tr",[a("td",[t._v("​"),a("a",{attrs:{href:"https://www.php.net/manual/zh/function.next.php",target:"_blank",rel:"noopener noreferrer"}},[t._v("next"),a("OutboundLink")],1)]),t._v(" "),a("td",[t._v("将数组中的内部指针向前移动一位")])]),t._v(" "),a("tr",[a("td",[t._v("​"),a("a",{attrs:{href:"https://www.php.net/manual/zh/function.pos.php",target:"_blank",rel:"noopener noreferrer"}},[t._v("pos"),a("OutboundLink")],1)]),t._v(" "),a("td",[t._v("current 的别名")])]),t._v(" "),a("tr",[a("td",[t._v("​"),a("a",{attrs:{href:"https://www.php.net/manual/zh/function.prev.php",target:"_blank",rel:"noopener noreferrer"}},[t._v("prev"),a("OutboundLink")],1)]),t._v(" "),a("td",[t._v("将数组的内部指针倒回一位")])]),t._v(" "),a("tr",[a("td",[t._v("​"),a("a",{attrs:{href:"https://www.php.net/manual/zh/function.range.php",target:"_blank",rel:"noopener noreferrer"}},[t._v("range"),a("OutboundLink")],1)]),t._v(" "),a("td",[t._v("根据范围创建数组，包含指定的元素")])]),t._v(" "),a("tr",[a("td",[t._v("​"),a("a",{attrs:{href:"https://www.php.net/manual/zh/function.reset.php",target:"_blank",rel:"noopener noreferrer"}},[t._v("reset"),a("OutboundLink")],1)]),t._v(" "),a("td",[t._v("将数组的内部指针指向第一个单元")])]),t._v(" "),a("tr",[a("td",[t._v("​"),a("a",{attrs:{href:"https://www.php.net/manual/zh/function.rsort.php",target:"_blank",rel:"noopener noreferrer"}},[t._v("rsort"),a("OutboundLink")],1)]),t._v(" "),a("td",[t._v("对数组逆向排序")])]),t._v(" "),a("tr",[a("td",[t._v("​"),a("a",{attrs:{href:"https://www.php.net/manual/zh/function.shuffle.php",target:"_blank",rel:"noopener noreferrer"}},[t._v("shuffle"),a("OutboundLink")],1)]),t._v(" "),a("td",[t._v("打乱数组")])]),t._v(" "),a("tr",[a("td",[t._v("​"),a("a",{attrs:{href:"https://www.php.net/manual/zh/function.sizeof.php",target:"_blank",rel:"noopener noreferrer"}},[t._v("sizeof"),a("OutboundLink")],1)]),t._v(" "),a("td",[t._v("count 的别名")])]),t._v(" "),a("tr",[a("td",[t._v("​"),a("a",{attrs:{href:"https://www.php.net/manual/zh/function.sort.php",target:"_blank",rel:"noopener noreferrer"}},[t._v("sort"),a("OutboundLink")],1)]),t._v(" "),a("td",[t._v("对数组排序")])]),t._v(" "),a("tr",[a("td",[t._v("​"),a("a",{attrs:{href:"https://www.php.net/manual/zh/function.uasort.php",target:"_blank",rel:"noopener noreferrer"}},[t._v("uasort"),a("OutboundLink")],1)]),t._v(" "),a("td",[t._v("使用用户自定义的比较函数对数组中的值进行排序并保持索引关联")])]),t._v(" "),a("tr",[a("td",[t._v("​"),a("a",{attrs:{href:"https://www.php.net/manual/zh/function.uksort.php",target:"_blank",rel:"noopener noreferrer"}},[t._v("uksort"),a("OutboundLink")],1)]),t._v(" "),a("td",[t._v("使用用户自定义的比较函数对数组中的键名进行排序")])]),t._v(" "),a("tr",[a("td",[t._v("​"),a("a",{attrs:{href:"https://www.php.net/manual/zh/function.usort.php",target:"_blank",rel:"noopener noreferrer"}},[t._v("usort"),a("OutboundLink")],1)]),t._v(" "),a("td",[t._v("使用用户自定义的比较函数对数组中的值进行排序")])])])]),t._v(" "),a("h2",{attrs:{id:"数组做什么和不做什么"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#数组做什么和不做什么"}},[t._v("#")]),t._v(" 数组做什么和不做什么")]),t._v(" "),a("div",{staticClass:"custom-block warning"},[a("p",{staticClass:"custom-block-title"},[t._v("键名要不要加引号")]),t._v(" "),a("p",[t._v("如果键名是一个字符串就必须要加引号，虽然不加引号 "),a("code",[t._v("PHP")]),t._v(" 也能正确解析，但是如果以后有一个变量或者常量甚至保留字的名取的和你这个字符串一样的话，那返回的结果可能就是一个错误的结果！")])]),t._v(" "),a("h2",{attrs:{id:"转换为数组"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#转换为数组"}},[t._v("#")]),t._v(" 转换为数组")]),t._v(" "),a("p",[t._v("对于任意 "),a("code",[t._v("integer")]),t._v(" "),a("code",[t._v("，float")]),t._v(" "),a("code",[t._v("，string")]),t._v(" "),a("code",[t._v("，boolean")]),t._v(" 和 "),a("code",[t._v("resource")]),t._v(" 类型，如果将一个值转换为数组，将得到一个仅有一个元素的数组，其下标为 0，该元素即为此标量的值。")]),t._v(" "),a("p",[t._v("如果一个 "),a("code",[t._v("object")]),t._v(" 类型转换为 "),a("code",[t._v("array")]),t._v(" ，则结果为一个数组，其单元为该对象的属性。键名将为成员变量名，不过有几点例外：整数属性不可访问；私有变量前会加上类名作前缀；保护变量前会加上一个 '*' 做前缀。这些前缀的前后都各有一个 NULL 字符。这会导致一些不可预知的行为：")]),t._v(" "),a("p",[a("code",[t._v("null")]),t._v(" 转换为数组将会得到一个空数组。")]),t._v(" "),a("h2",{attrs:{id:"比较数组"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#比较数组"}},[t._v("#")]),t._v(" 比较数组")]),t._v(" "),a("p",[t._v("可以使用 "),a("a",{attrs:{href:"https://www.php.net/manual/zh/function.array-diff.php",target:"_blank",rel:"noopener noreferrer"}},[t._v("array_diff"),a("OutboundLink")],1),t._v(" 来比较数组。")])])}),[],!1,null,null,null);r.default=e.exports}}]);